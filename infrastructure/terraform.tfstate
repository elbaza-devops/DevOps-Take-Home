{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 103,
  "lineage": "bc4f11ba-568b-9c0d-7850-133bdaf66e4c",
  "outputs": {
    "name": {
      "value": "arn:aws:iam::851725332550:user/cloud_user",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-1-zg-1"
            ],
            "id": "us-east-1",
            "names": [
              "us-east-1a",
              "us-east-1b",
              "us-east-1c",
              "us-east-1d",
              "us-east-1e",
              "us-east-1f"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "use1-az4",
              "use1-az6",
              "use1-az1",
              "use1-az2",
              "use1-az3",
              "use1-az5"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "851725332550",
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "851725332550",
            "user_id": "AIDA4MTWJGBDKC7FRJUQV"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "http",
      "name": "alb_crds",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - description: The Ingress Group name\n      jsonPath: .spec.group.name\n      name: GROUP-NAME\n      type: string\n    - description: The AWS Load Balancer scheme\n      jsonPath: .spec.scheme\n      name: SCHEME\n      type: string\n    - description: The AWS Load Balancer ipAddressType\n      jsonPath: .spec.ipAddressType\n      name: IP-ADDRESS-TYPE\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: IngressClassParams is the Schema for the IngressClassParams API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: IngressClassParamsSpec defines the desired state of IngressClassParams\n            properties:\n              PrefixListsIDs:\n                description: PrefixListsIDs defines the security group prefix lists\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              certificateArn:\n                description: CertificateArn specifies the ARN of the certificates\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              group:\n                description: Group defines the IngressGroup for all Ingresses that\n                  belong to IngressClass with this IngressClassParams.\n                properties:\n                  name:\n                    description: Name is the name of IngressGroup.\n                    type: string\n                required:\n                - name\n                type: object\n              inboundCIDRs:\n                description: InboundCIDRs specifies the CIDRs that are allowed to\n                  access the Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              ipAddressType:\n                description: IPAddressType defines the ip address type for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                enum:\n                - ipv4\n                - dualstack\n                - dualstack-without-public-ipv4\n                type: string\n              ipamConfiguration:\n                description: IPAMConfiguration defines the IPAM settings for a Load\n                  Balancer.\n                properties:\n                  ipv4IPAMPoolId:\n                    description: IPv4IPAMPoolId defines the IPAM pool ID used for\n                      IPv4 Addresses on the ALB.\n                    type: string\n                type: object\n              listeners:\n                description: Listeners define a list of listeners with their protocol,\n                  port and attributes.\n                items:\n                  properties:\n                    listenerAttributes:\n                      description: The attributes of the listener\n                      items:\n                        description: Attributes defines custom attributes on resources.\n                        properties:\n                          key:\n                            description: The key of the attribute.\n                            type: string\n                          value:\n                            description: The value of the attribute.\n                            type: string\n                        required:\n                        - key\n                        - value\n                        type: object\n                      type: array\n                    port:\n                      description: The port of the listener\n                      format: int32\n                      type: integer\n                    protocol:\n                      description: The protocol of the listener\n                      type: string\n                  type: object\n                type: array\n              loadBalancerAttributes:\n                description: LoadBalancerAttributes define the custom attributes to\n                  LoadBalancers for all Ingress that that belong to IngressClass with\n                  this IngressClassParams.\n                items:\n                  description: Attributes defines custom attributes on resources.\n                  properties:\n                    key:\n                      description: The key of the attribute.\n                      type: string\n                    value:\n                      description: The value of the attribute.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              minimumLoadBalancerCapacity:\n                description: MinimumLoadBalancerCapacity define the capacity reservation\n                  for LoadBalancers for all Ingress that belong to IngressClass with\n                  this IngressClassParams.\n                properties:\n                  capacityUnits:\n                    description: The Capacity Units Value.\n                    format: int32\n                    type: integer\n                required:\n                - capacityUnits\n                type: object\n              namespaceSelector:\n                description: |-\n                  NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams.\n                  * if absent or present but empty, it selects all namespaces.\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              scheme:\n                description: Scheme defines the scheme for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                enum:\n                - internal\n                - internet-facing\n                type: string\n              sslPolicy:\n                description: SSLPolicy specifies the SSL Policy for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                type: string\n              subnets:\n                description: Subnets defines the subnets for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                properties:\n                  ids:\n                    description: IDs specify the resource IDs of subnets. Exactly\n                      one of this or `tags` must be specified.\n                    items:\n                      description: SubnetID specifies a subnet ID.\n                      pattern: subnet-[0-9a-f]+\n                      type: string\n                    minItems: 1\n                    type: array\n                  tags:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    description: |-\n                      Tags specifies subnets in the load balancer's VPC where each\n                      tag specified in the map key contains one of the values in the corresponding\n                      value list.\n                      Exactly one of this or `ids` must be specified.\n                    type: object\n                type: object\n              tags:\n                description: Tags defines list of Tags on AWS resources provisioned\n                  for Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  description: Tag defines a AWS Tag on resources.\n                  properties:\n                    key:\n                      description: The key of the tag.\n                      type: string\n                    value:\n                      description: The value of the tag.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              targetType:\n                description: TargetType defines the target type of target groups for\n                  all Ingresses that belong to IngressClass with this IngressClassParams.\n                enum:\n                - instance\n                - ip\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - description: The AWS TargetGroup's Name\n      jsonPath: .spec.targetGroupName\n      name: NAME\n      priority: 2\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              assumeRoleExternalId:\n                description: IAM Role ARN to assume when calling AWS APIs. Needed\n                  to assume a role in another account and prevent the confused deputy\n                  problem. https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html\n                type: string\n              iamRoleArnToAssume:\n                description: IAM Role ARN to assume when calling AWS APIs. Useful\n                  if the target group is in a different AWS account\n                type: string\n              multiClusterTargetGroup:\n                description: MultiClusterTargetGroup Denotes if the TargetGroup is\n                  shared among multiple clusters\n                type: boolean\n              networking:\n                description: networking provides the networking setup for ELBV2 LoadBalancer\n                  to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      properties:\n                        from:\n                          description: |-\n                            List of peers which should be able to access the targets in TargetGroup.\n                            At least one NetworkingPeer should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: |-\n                                  IPBlock defines an IPBlock peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: |-\n                                      CIDR is the network CIDR.\n                                      Both IPV4 or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: |-\n                                  SecurityGroup defines a SecurityGroup peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: |-\n                            List of ports which should be made accessible on the targets in TargetGroup.\n                            If ports is empty or unspecified, it defaults to all ports with TCP.\n                          items:\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: |-\n                                  The port which traffic must match.\n                                  When NodePort endpoints(instance TargetType) is used, this must be a numerical port.\n                                  When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\n                                  if port is unspecified, it defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: |-\n                                  The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetGroupName:\n                description: targetGroupName is the Name of the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - description: The AWS TargetGroup's Name\n      jsonPath: .spec.targetGroupName\n      name: NAME\n      priority: 2\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              assumeRoleExternalId:\n                description: IAM Role ARN to assume when calling AWS APIs. Needed\n                  to assume a role in another account and prevent the confused deputy\n                  problem. https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html\n                type: string\n              iamRoleArnToAssume:\n                description: IAM Role ARN to assume when calling AWS APIs. Useful\n                  if the target group is in a different AWS account\n                type: string\n              ipAddressType:\n                description: ipAddressType specifies whether the target group is of\n                  type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                enum:\n                - ipv4\n                - ipv6\n                type: string\n              multiClusterTargetGroup:\n                description: MultiClusterTargetGroup Denotes if the TargetGroup is\n                  shared among multiple clusters\n                type: boolean\n              networking:\n                description: networking defines the networking rules to allow ELBV2\n                  LoadBalancer to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      description: NetworkingIngressRule defines a particular set\n                        of traffic that is allowed to access TargetGroup's targets.\n                      properties:\n                        from:\n                          description: |-\n                            List of peers which should be able to access the targets in TargetGroup.\n                            At least one NetworkingPeer should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: |-\n                                  IPBlock defines an IPBlock peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: |-\n                                      CIDR is the network CIDR.\n                                      Both IPV4 or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: |-\n                                  SecurityGroup defines a SecurityGroup peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: |-\n                            List of ports which should be made accessible on the targets in TargetGroup.\n                            If ports is empty or unspecified, it defaults to all ports with TCP.\n                          items:\n                            description: NetworkingPort defines the port and protocol\n                              for networking rules.\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: |-\n                                  The port which traffic must match.\n                                  When NodePort endpoints(instance TargetType) is used, this must be a numerical port.\n                                  When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\n                                  if port is unspecified, it defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: |-\n                                  The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              nodeSelector:\n                description: node selector for instance type target groups to only\n                  register certain nodes\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetGroupName:\n                description: targetGroupName is the Name of the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n              vpcID:\n                description: VpcID is the VPC of the TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                type: string\n            required:\n            - serviceRef\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "ca_cert_pem": null,
            "client_cert_pem": null,
            "client_key_pem": null,
            "id": "https://raw.githubusercontent.com/aws/eks-charts/master/stable/aws-load-balancer-controller/crds/crds.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - description: The Ingress Group name\n      jsonPath: .spec.group.name\n      name: GROUP-NAME\n      type: string\n    - description: The AWS Load Balancer scheme\n      jsonPath: .spec.scheme\n      name: SCHEME\n      type: string\n    - description: The AWS Load Balancer ipAddressType\n      jsonPath: .spec.ipAddressType\n      name: IP-ADDRESS-TYPE\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: IngressClassParams is the Schema for the IngressClassParams API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: IngressClassParamsSpec defines the desired state of IngressClassParams\n            properties:\n              PrefixListsIDs:\n                description: PrefixListsIDs defines the security group prefix lists\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              certificateArn:\n                description: CertificateArn specifies the ARN of the certificates\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              group:\n                description: Group defines the IngressGroup for all Ingresses that\n                  belong to IngressClass with this IngressClassParams.\n                properties:\n                  name:\n                    description: Name is the name of IngressGroup.\n                    type: string\n                required:\n                - name\n                type: object\n              inboundCIDRs:\n                description: InboundCIDRs specifies the CIDRs that are allowed to\n                  access the Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              ipAddressType:\n                description: IPAddressType defines the ip address type for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                enum:\n                - ipv4\n                - dualstack\n                - dualstack-without-public-ipv4\n                type: string\n              ipamConfiguration:\n                description: IPAMConfiguration defines the IPAM settings for a Load\n                  Balancer.\n                properties:\n                  ipv4IPAMPoolId:\n                    description: IPv4IPAMPoolId defines the IPAM pool ID used for\n                      IPv4 Addresses on the ALB.\n                    type: string\n                type: object\n              listeners:\n                description: Listeners define a list of listeners with their protocol,\n                  port and attributes.\n                items:\n                  properties:\n                    listenerAttributes:\n                      description: The attributes of the listener\n                      items:\n                        description: Attributes defines custom attributes on resources.\n                        properties:\n                          key:\n                            description: The key of the attribute.\n                            type: string\n                          value:\n                            description: The value of the attribute.\n                            type: string\n                        required:\n                        - key\n                        - value\n                        type: object\n                      type: array\n                    port:\n                      description: The port of the listener\n                      format: int32\n                      type: integer\n                    protocol:\n                      description: The protocol of the listener\n                      type: string\n                  type: object\n                type: array\n              loadBalancerAttributes:\n                description: LoadBalancerAttributes define the custom attributes to\n                  LoadBalancers for all Ingress that that belong to IngressClass with\n                  this IngressClassParams.\n                items:\n                  description: Attributes defines custom attributes on resources.\n                  properties:\n                    key:\n                      description: The key of the attribute.\n                      type: string\n                    value:\n                      description: The value of the attribute.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              minimumLoadBalancerCapacity:\n                description: MinimumLoadBalancerCapacity define the capacity reservation\n                  for LoadBalancers for all Ingress that belong to IngressClass with\n                  this IngressClassParams.\n                properties:\n                  capacityUnits:\n                    description: The Capacity Units Value.\n                    format: int32\n                    type: integer\n                required:\n                - capacityUnits\n                type: object\n              namespaceSelector:\n                description: |-\n                  NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams.\n                  * if absent or present but empty, it selects all namespaces.\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              scheme:\n                description: Scheme defines the scheme for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                enum:\n                - internal\n                - internet-facing\n                type: string\n              sslPolicy:\n                description: SSLPolicy specifies the SSL Policy for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                type: string\n              subnets:\n                description: Subnets defines the subnets for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                properties:\n                  ids:\n                    description: IDs specify the resource IDs of subnets. Exactly\n                      one of this or `tags` must be specified.\n                    items:\n                      description: SubnetID specifies a subnet ID.\n                      pattern: subnet-[0-9a-f]+\n                      type: string\n                    minItems: 1\n                    type: array\n                  tags:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    description: |-\n                      Tags specifies subnets in the load balancer's VPC where each\n                      tag specified in the map key contains one of the values in the corresponding\n                      value list.\n                      Exactly one of this or `ids` must be specified.\n                    type: object\n                type: object\n              tags:\n                description: Tags defines list of Tags on AWS resources provisioned\n                  for Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  description: Tag defines a AWS Tag on resources.\n                  properties:\n                    key:\n                      description: The key of the tag.\n                      type: string\n                    value:\n                      description: The value of the tag.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              targetType:\n                description: TargetType defines the target type of target groups for\n                  all Ingresses that belong to IngressClass with this IngressClassParams.\n                enum:\n                - instance\n                - ip\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - description: The AWS TargetGroup's Name\n      jsonPath: .spec.targetGroupName\n      name: NAME\n      priority: 2\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              assumeRoleExternalId:\n                description: IAM Role ARN to assume when calling AWS APIs. Needed\n                  to assume a role in another account and prevent the confused deputy\n                  problem. https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html\n                type: string\n              iamRoleArnToAssume:\n                description: IAM Role ARN to assume when calling AWS APIs. Useful\n                  if the target group is in a different AWS account\n                type: string\n              multiClusterTargetGroup:\n                description: MultiClusterTargetGroup Denotes if the TargetGroup is\n                  shared among multiple clusters\n                type: boolean\n              networking:\n                description: networking provides the networking setup for ELBV2 LoadBalancer\n                  to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      properties:\n                        from:\n                          description: |-\n                            List of peers which should be able to access the targets in TargetGroup.\n                            At least one NetworkingPeer should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: |-\n                                  IPBlock defines an IPBlock peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: |-\n                                      CIDR is the network CIDR.\n                                      Both IPV4 or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: |-\n                                  SecurityGroup defines a SecurityGroup peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: |-\n                            List of ports which should be made accessible on the targets in TargetGroup.\n                            If ports is empty or unspecified, it defaults to all ports with TCP.\n                          items:\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: |-\n                                  The port which traffic must match.\n                                  When NodePort endpoints(instance TargetType) is used, this must be a numerical port.\n                                  When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\n                                  if port is unspecified, it defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: |-\n                                  The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetGroupName:\n                description: targetGroupName is the Name of the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - description: The AWS TargetGroup's Name\n      jsonPath: .spec.targetGroupName\n      name: NAME\n      priority: 2\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              assumeRoleExternalId:\n                description: IAM Role ARN to assume when calling AWS APIs. Needed\n                  to assume a role in another account and prevent the confused deputy\n                  problem. https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html\n                type: string\n              iamRoleArnToAssume:\n                description: IAM Role ARN to assume when calling AWS APIs. Useful\n                  if the target group is in a different AWS account\n                type: string\n              ipAddressType:\n                description: ipAddressType specifies whether the target group is of\n                  type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                enum:\n                - ipv4\n                - ipv6\n                type: string\n              multiClusterTargetGroup:\n                description: MultiClusterTargetGroup Denotes if the TargetGroup is\n                  shared among multiple clusters\n                type: boolean\n              networking:\n                description: networking defines the networking rules to allow ELBV2\n                  LoadBalancer to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      description: NetworkingIngressRule defines a particular set\n                        of traffic that is allowed to access TargetGroup's targets.\n                      properties:\n                        from:\n                          description: |-\n                            List of peers which should be able to access the targets in TargetGroup.\n                            At least one NetworkingPeer should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: |-\n                                  IPBlock defines an IPBlock peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: |-\n                                      CIDR is the network CIDR.\n                                      Both IPV4 or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: |-\n                                  SecurityGroup defines a SecurityGroup peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: |-\n                            List of ports which should be made accessible on the targets in TargetGroup.\n                            If ports is empty or unspecified, it defaults to all ports with TCP.\n                          items:\n                            description: NetworkingPort defines the port and protocol\n                              for networking rules.\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: |-\n                                  The port which traffic must match.\n                                  When NodePort endpoints(instance TargetType) is used, this must be a numerical port.\n                                  When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\n                                  if port is unspecified, it defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: |-\n                                  The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              nodeSelector:\n                description: node selector for instance type target groups to only\n                  register certain nodes\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetGroupName:\n                description: targetGroupName is the Name of the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n              vpcID:\n                description: VpcID is the VPC of the TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                type: string\n            required:\n            - serviceRef\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Wed, 13 Aug 2025 19:38:42 GMT",
              "Etag": "W/\"cf6f391f449e0c246fa2aab2f878b17056aa0db16531731761be0630049449dd\"",
              "Expires": "Wed, 13 Aug 2025 19:43:42 GMT",
              "Source-Age": "118",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding",
              "Via": "1.1 varnish",
              "X-Cache": "HIT",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "cb3687a810e71a4b2ba0da9ae269c9b493b03c86",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "537A:392FF5:3E1AEB:45B97E:689CE94C",
              "X-Served-By": "cache-mrs10561-MRS",
              "X-Timer": "S1755113923.752141,VS0,VE6",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/aws/eks-charts/master/stable/aws-load-balancer-controller/crds/crds.yaml"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "aws_lb_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-lb-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.13.4",
                "chart": "aws-load-balancer-controller",
                "first_deployed": 1755114946,
                "last_deployed": 1755114946,
                "name": "aws-lb-controller",
                "namespace": "kube-system",
                "notes": "AWS Load Balancer controller installed!\n",
                "revision": 1,
                "values": "{\"autoDiscoverAwsRegion\":true,\"autoDiscoverAwsVpcID\":true,\"clusterName\":\"demo-project_dev\"}",
                "version": "1.13.4"
              }
            ],
            "name": "aws-lb-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "autoDiscoverAwsRegion",
                "type": "",
                "value": "true"
              },
              {
                "name": "autoDiscoverAwsVpcID",
                "type": "",
                "value": "true"
              },
              {
                "name": "clusterName",
                "type": "",
                "value": "demo-project_dev"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.13.4",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_policy.custom",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.custom",
            "module.eks.aws_iam_role_policy_attachment.eks_auto",
            "module.eks.aws_iam_role_policy_attachment.eks_auto_additional",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.custom",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cluster-autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cluster-autoscaler",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cluster-autoscaler",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.33.0",
                "chart": "cluster-autoscaler",
                "first_deployed": 1755114944,
                "last_deployed": 1755114944,
                "name": "cluster-autoscaler",
                "namespace": "kube-system",
                "notes": "\n\nTo verify that cluster-autoscaler has started, run:\n\n  kubectl --namespace=kube-system get pods -l \"app.kubernetes.io/name=aws-cluster-autoscaler,app.kubernetes.io/instance=cluster-autoscaler\"",
                "revision": 1,
                "values": "{\"autoDiscovery\":{\"clusterName\":\"demo-project_dev\"},\"awsRegion\":\"us-east-1\"}",
                "version": "9.50.0"
              }
            ],
            "name": "cluster-autoscaler",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/autoscaler",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "autoDiscovery.clusterName",
                "type": "",
                "value": "demo-project_dev"
              },
              {
                "name": "awsRegion",
                "type": "",
                "value": "us-east-1"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "9.50.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_policy.custom",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.custom",
            "module.eks.aws_iam_role_policy_attachment.eks_auto",
            "module.eks.aws_iam_role_policy_attachment.eks_auto_additional",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.custom",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "external-secrets-operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "external-secrets",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "external-secrets-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.19.1",
                "chart": "external-secrets",
                "first_deployed": 1755114940,
                "last_deployed": 1755114940,
                "name": "external-secrets-operator",
                "namespace": "kube-system",
                "notes": "external-secrets has been deployed successfully in namespace kube-system!\n\nIn order to begin using ExternalSecrets, you will need to set up a SecretStore\nor ClusterSecretStore resource (for example, by creating a 'vault' SecretStore).\n\nMore information on the different types of SecretStores and how to configure them\ncan be found in our Github: https://github.com/external-secrets/external-secrets\n",
                "revision": 1,
                "values": "{}",
                "version": "0.19.1"
              }
            ],
            "name": "external-secrets-operator",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.external-secrets.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "0.19.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_policy.custom",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.custom",
            "module.eks.aws_iam_role_policy_attachment.eks_auto",
            "module.eks.aws_iam_role_policy_attachment.eks_auto_additional",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.custom",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kube_prometheus_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kube-prometheus-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.84.1",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1755114692,
                "last_deployed": 1755114692,
                "name": "kube-prometheus-stack",
                "namespace": "monitoring",
                "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=kube-prometheus-stack\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring kube-prometheus-stack-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   kube-prometheus-stack-grafana.monitoring.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prometheus-stack\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace monitoring port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, kube-prometheus-stack-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=kube-prometheus-stack\"\n\nGet Grafana 'admin' user password by running:\n\n  kubectl --namespace monitoring get secrets kube-prometheus-stack-grafana -o jsonpath=\"{.data.admin-password}\" | base64 -d ; echo\n\nAccess Grafana local instance:\n\n  export POD_NAME=$(kubectl --namespace monitoring get pod -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prometheus-stack\" -oname)\n  kubectl --namespace monitoring port-forward $POD_NAME 3000\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n",
                "revision": 1,
                "values": "{\"alertmanager\":{\"alertmanagerSpec\":{\"secrets\":[\"alertmanager-slack\"]},\"config\":{\"global\":{\"resolve_timeout\":\"5m\"},\"receivers\":[{\"name\":\"slack-default\",\"slack_configs\":[{\"api_url_file\":\"/etc/alertmanager/secrets/alertmanager-slack/slack_webhook\",\"channel\":\"#oncall-devops\",\"send_resolved\":true,\"text\":\"{{- range .Alerts -}} • *{{ .Labels.namespace }}*: {{ .Annotations.summary | default .Annotations.message | default .CommonLabels.alertname }}\\n  {{- if .Annotations.description }} — {{ .Annotations.description }}{{- end }}\\n{{- end }}\",\"title\":\"[{{ .Status | toUpper }}] {{ .CommonLabels.alertname }} ({{ .CommonLabels.severity | default \\\"n/a\\\" }})\"}]},{\"name\":\"slack-critical\",\"slack_configs\":[{\"api_url_file\":\"/etc/alertmanager/secrets/alertmanager-slack/slack_webhook\",\"channel\":\"#oncall-devops\",\"send_resolved\":true}]},{\"name\":null}],\"route\":{\"group_by\":[\"namespace\",\"alertname\"],\"group_interval\":\"5m\",\"group_wait\":\"30s\",\"receiver\":\"slack-default\",\"repeat_interval\":\"4h\",\"routes\":[{\"matchers\":[\"alertname = \\\"Watchdog\\\"\"],\"receiver\":null},{\"matchers\":[\"severity = \\\"critical\\\"\"],\"receiver\":\"slack-critical\"}]},\"templates\":[\"/etc/alertmanager/config/*.tmpl\"]}}}",
                "version": "76.3.0"
              }
            ],
            "name": "kube-prometheus-stack",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "alertmanager:\n  # Mount the Secret into Alertmanager pods\n  alertmanagerSpec:\n    secrets:\n      - alertmanager-slack\n\n  # Replace the default routing tree to send alerts to Slack\n  config:\n    global:\n      resolve_timeout: 5m\n\n    # Keep Watchdog muted (default behavior), send everything else to Slack\n    route:\n      group_by: [\"namespace\",\"alertname\"]\n      group_wait: 30s\n      group_interval: 5m\n      repeat_interval: 4h\n      receiver: slack-default\n      routes:\n        - matchers:\n            - alertname = \"Watchdog\"\n          receiver: null\n        - matchers:\n            - severity = \"critical\"\n          receiver: slack-critical\n\n    receivers:\n      - name: slack-default\n        slack_configs:\n          - api_url_file: /etc/alertmanager/secrets/alertmanager-slack/slack_webhook\n            send_resolved: true\n            # You can omit \"channel\" to use the channel attached to the webhook,\n            # or override it here:\n            channel: \"#oncall-devops\"\n            title: \u003e-\n              [{{ .Status | toUpper }}] {{ .CommonLabels.alertname }} ({{ .CommonLabels.severity | default \"n/a\" }})\n            text: \u003e-\n              {{- range .Alerts -}}\n              • *{{ .Labels.namespace }}*: {{ .Annotations.summary | default .Annotations.message | default .CommonLabels.alertname }}\n                {{- if .Annotations.description }} — {{ .Annotations.description }}{{- end }}\n              {{- end }}\n\n      - name: slack-critical\n        slack_configs:\n          - api_url_file: /etc/alertmanager/secrets/alertmanager-slack/slack_webhook\n            send_resolved: true\n            channel: \"#oncall-devops\"\n\n      - name: null\n\n    templates:\n      - \"/etc/alertmanager/config/*.tmpl\"\n"
            ],
            "verify": false,
            "version": "76.3.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "metrics-server",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metrics-server",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.7.2",
                "chart": "metrics-server",
                "first_deployed": 1755114665,
                "last_deployed": 1755114665,
                "name": "metrics-server",
                "namespace": "kube-system",
                "notes": "***********************************************************************\n* Metrics Server                                                      *\n***********************************************************************\n  Chart version: 3.12.2\n  App version:   0.7.2\n  Image tag:     registry.k8s.io/metrics-server/metrics-server:v0.7.2\n***********************************************************************\n",
                "revision": 1,
                "values": "{}",
                "version": "3.12.2"
              }
            ],
            "name": "metrics-server",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes-sigs.github.io/metrics-server",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "3.12.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "alb_crds",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/ingressclassparams.elbv2.k8s.aws",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "3d482164294ce22dfb5fd042e1f2a2121f615ef56c320e988209905fe92aa9a6",
            "live_uid": "522f6fcc-78ee-4ed7-95fc-986f19db7cac",
            "name": "ingressclassparams.elbv2.k8s.aws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "522f6fcc-78ee-4ed7-95fc-986f19db7cac",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - description: The Ingress Group name\n      jsonPath: .spec.group.name\n      name: GROUP-NAME\n      type: string\n    - description: The AWS Load Balancer scheme\n      jsonPath: .spec.scheme\n      name: SCHEME\n      type: string\n    - description: The AWS Load Balancer ipAddressType\n      jsonPath: .spec.ipAddressType\n      name: IP-ADDRESS-TYPE\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: IngressClassParams is the Schema for the IngressClassParams API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: IngressClassParamsSpec defines the desired state of IngressClassParams\n            properties:\n              PrefixListsIDs:\n                description: PrefixListsIDs defines the security group prefix lists\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              certificateArn:\n                description: CertificateArn specifies the ARN of the certificates\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              group:\n                description: Group defines the IngressGroup for all Ingresses that\n                  belong to IngressClass with this IngressClassParams.\n                properties:\n                  name:\n                    description: Name is the name of IngressGroup.\n                    type: string\n                required:\n                - name\n                type: object\n              inboundCIDRs:\n                description: InboundCIDRs specifies the CIDRs that are allowed to\n                  access the Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              ipAddressType:\n                description: IPAddressType defines the ip address type for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                enum:\n                - ipv4\n                - dualstack\n                - dualstack-without-public-ipv4\n                type: string\n              ipamConfiguration:\n                description: IPAMConfiguration defines the IPAM settings for a Load\n                  Balancer.\n                properties:\n                  ipv4IPAMPoolId:\n                    description: IPv4IPAMPoolId defines the IPAM pool ID used for\n                      IPv4 Addresses on the ALB.\n                    type: string\n                type: object\n              listeners:\n                description: Listeners define a list of listeners with their protocol,\n                  port and attributes.\n                items:\n                  properties:\n                    listenerAttributes:\n                      description: The attributes of the listener\n                      items:\n                        description: Attributes defines custom attributes on resources.\n                        properties:\n                          key:\n                            description: The key of the attribute.\n                            type: string\n                          value:\n                            description: The value of the attribute.\n                            type: string\n                        required:\n                        - key\n                        - value\n                        type: object\n                      type: array\n                    port:\n                      description: The port of the listener\n                      format: int32\n                      type: integer\n                    protocol:\n                      description: The protocol of the listener\n                      type: string\n                  type: object\n                type: array\n              loadBalancerAttributes:\n                description: LoadBalancerAttributes define the custom attributes to\n                  LoadBalancers for all Ingress that that belong to IngressClass with\n                  this IngressClassParams.\n                items:\n                  description: Attributes defines custom attributes on resources.\n                  properties:\n                    key:\n                      description: The key of the attribute.\n                      type: string\n                    value:\n                      description: The value of the attribute.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              minimumLoadBalancerCapacity:\n                description: MinimumLoadBalancerCapacity define the capacity reservation\n                  for LoadBalancers for all Ingress that belong to IngressClass with\n                  this IngressClassParams.\n                properties:\n                  capacityUnits:\n                    description: The Capacity Units Value.\n                    format: int32\n                    type: integer\n                required:\n                - capacityUnits\n                type: object\n              namespaceSelector:\n                description: |-\n                  NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams.\n                  * if absent or present but empty, it selects all namespaces.\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              scheme:\n                description: Scheme defines the scheme for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                enum:\n                - internal\n                - internet-facing\n                type: string\n              sslPolicy:\n                description: SSLPolicy specifies the SSL Policy for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                type: string\n              subnets:\n                description: Subnets defines the subnets for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                properties:\n                  ids:\n                    description: IDs specify the resource IDs of subnets. Exactly\n                      one of this or `tags` must be specified.\n                    items:\n                      description: SubnetID specifies a subnet ID.\n                      pattern: subnet-[0-9a-f]+\n                      type: string\n                    minItems: 1\n                    type: array\n                  tags:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    description: |-\n                      Tags specifies subnets in the load balancer's VPC where each\n                      tag specified in the map key contains one of the values in the corresponding\n                      value list.\n                      Exactly one of this or `ids` must be specified.\n                    type: object\n                type: object\n              tags:\n                description: Tags defines list of Tags on AWS resources provisioned\n                  for Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  description: Tag defines a AWS Tag on resources.\n                  properties:\n                    key:\n                      description: The key of the tag.\n                      type: string\n                    value:\n                      description: The value of the tag.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              targetType:\n                description: TargetType defines the target type of target groups for\n                  all Ingresses that belong to IngressClass with this IngressClassParams.\n                enum:\n                - instance\n                - ip\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - description: The AWS TargetGroup's Name\n      jsonPath: .spec.targetGroupName\n      name: NAME\n      priority: 2\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              assumeRoleExternalId:\n                description: IAM Role ARN to assume when calling AWS APIs. Needed\n                  to assume a role in another account and prevent the confused deputy\n                  problem. https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html\n                type: string\n              iamRoleArnToAssume:\n                description: IAM Role ARN to assume when calling AWS APIs. Useful\n                  if the target group is in a different AWS account\n                type: string\n              multiClusterTargetGroup:\n                description: MultiClusterTargetGroup Denotes if the TargetGroup is\n                  shared among multiple clusters\n                type: boolean\n              networking:\n                description: networking provides the networking setup for ELBV2 LoadBalancer\n                  to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      properties:\n                        from:\n                          description: |-\n                            List of peers which should be able to access the targets in TargetGroup.\n                            At least one NetworkingPeer should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: |-\n                                  IPBlock defines an IPBlock peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: |-\n                                      CIDR is the network CIDR.\n                                      Both IPV4 or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: |-\n                                  SecurityGroup defines a SecurityGroup peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: |-\n                            List of ports which should be made accessible on the targets in TargetGroup.\n                            If ports is empty or unspecified, it defaults to all ports with TCP.\n                          items:\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: |-\n                                  The port which traffic must match.\n                                  When NodePort endpoints(instance TargetType) is used, this must be a numerical port.\n                                  When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\n                                  if port is unspecified, it defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: |-\n                                  The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetGroupName:\n                description: targetGroupName is the Name of the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - description: The AWS TargetGroup's Name\n      jsonPath: .spec.targetGroupName\n      name: NAME\n      priority: 2\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              assumeRoleExternalId:\n                description: IAM Role ARN to assume when calling AWS APIs. Needed\n                  to assume a role in another account and prevent the confused deputy\n                  problem. https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html\n                type: string\n              iamRoleArnToAssume:\n                description: IAM Role ARN to assume when calling AWS APIs. Useful\n                  if the target group is in a different AWS account\n                type: string\n              ipAddressType:\n                description: ipAddressType specifies whether the target group is of\n                  type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                enum:\n                - ipv4\n                - ipv6\n                type: string\n              multiClusterTargetGroup:\n                description: MultiClusterTargetGroup Denotes if the TargetGroup is\n                  shared among multiple clusters\n                type: boolean\n              networking:\n                description: networking defines the networking rules to allow ELBV2\n                  LoadBalancer to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      description: NetworkingIngressRule defines a particular set\n                        of traffic that is allowed to access TargetGroup's targets.\n                      properties:\n                        from:\n                          description: |-\n                            List of peers which should be able to access the targets in TargetGroup.\n                            At least one NetworkingPeer should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: |-\n                                  IPBlock defines an IPBlock peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: |-\n                                      CIDR is the network CIDR.\n                                      Both IPV4 or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: |-\n                                  SecurityGroup defines a SecurityGroup peer.\n                                  If specified, none of the other fields can be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: |-\n                            List of ports which should be made accessible on the targets in TargetGroup.\n                            If ports is empty or unspecified, it defaults to all ports with TCP.\n                          items:\n                            description: NetworkingPort defines the port and protocol\n                              for networking rules.\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: |-\n                                  The port which traffic must match.\n                                  When NodePort endpoints(instance TargetType) is used, this must be a numerical port.\n                                  When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\n                                  if port is unspecified, it defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: |-\n                                  The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              nodeSelector:\n                description: node selector for instance type target groups to only\n                  register certain nodes\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetGroupName:\n                description: targetGroupName is the Name of the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n              vpcID:\n                description: VpcID is the VPC of the TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                type: string\n            required:\n            - serviceRef\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - description: The Ingress Group name\n      jsonPath: .spec.group.name\n      name: GROUP-NAME\n      type: string\n    - description: The AWS Load Balancer scheme\n      jsonPath: .spec.scheme\n      name: SCHEME\n      type: string\n    - description: The AWS Load Balancer ipAddressType\n      jsonPath: .spec.ipAddressType\n      name: IP-ADDRESS-TYPE\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: IngressClassParams is the Schema for the IngressClassParams API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: IngressClassParamsSpec defines the desired state of IngressClassParams\n            properties:\n              PrefixListsIDs:\n                description: PrefixListsIDs defines the security group prefix lists\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              certificateArn:\n                description: CertificateArn specifies the ARN of the certificates\n                  for all Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              group:\n                description: Group defines the IngressGroup for all Ingresses that\n                  belong to IngressClass with this IngressClassParams.\n                properties:\n                  name:\n                    description: Name is the name of IngressGroup.\n                    type: string\n                required:\n                - name\n                type: object\n              inboundCIDRs:\n                description: InboundCIDRs specifies the CIDRs that are allowed to\n                  access the Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              ipAddressType:\n                description: IPAddressType defines the ip address type for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                enum:\n                - ipv4\n                - dualstack\n                - dualstack-without-public-ipv4\n                type: string\n              ipamConfiguration:\n                description: IPAMConfiguration defines the IPAM settings for a Load\n                  Balancer.\n                properties:\n                  ipv4IPAMPoolId:\n                    description: IPv4IPAMPoolId defines the IPAM pool ID used for\n                      IPv4 Addresses on the ALB.\n                    type: string\n                type: object\n              listeners:\n                description: Listeners define a list of listeners with their protocol,\n                  port and attributes.\n                items:\n                  properties:\n                    listenerAttributes:\n                      description: The attributes of the listener\n                      items:\n                        description: Attributes defines custom attributes on resources.\n                        properties:\n                          key:\n                            description: The key of the attribute.\n                            type: string\n                          value:\n                            description: The value of the attribute.\n                            type: string\n                        required:\n                        - key\n                        - value\n                        type: object\n                      type: array\n                    port:\n                      description: The port of the listener\n                      format: int32\n                      type: integer\n                    protocol:\n                      description: The protocol of the listener\n                      type: string\n                  type: object\n                type: array\n              loadBalancerAttributes:\n                description: LoadBalancerAttributes define the custom attributes to\n                  LoadBalancers for all Ingress that that belong to IngressClass with\n                  this IngressClassParams.\n                items:\n                  description: Attributes defines custom attributes on resources.\n                  properties:\n                    key:\n                      description: The key of the attribute.\n                      type: string\n                    value:\n                      description: The value of the attribute.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              minimumLoadBalancerCapacity:\n                description: MinimumLoadBalancerCapacity define the capacity reservation\n                  for LoadBalancers for all Ingress that belong to IngressClass with\n                  this IngressClassParams.\n                properties:\n                  capacityUnits:\n                    description: The Capacity Units Value.\n                    format: int32\n                    type: integer\n                required:\n                - capacityUnits\n                type: object\n              namespaceSelector:\n                description: |-\n                  NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams.\n                  * if absent or present but empty, it selects all namespaces.\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: |-\n                        A label selector requirement is a selector that contains values, a key, and an operator that\n                        relates the key and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: |-\n                            operator represents a key's relationship to a set of values.\n                            Valid operators are In, NotIn, Exists and DoesNotExist.\n                          type: string\n                        values:\n                          description: |-\n                            values is an array of string values. If the operator is In or NotIn,\n                            the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                            the values array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                          x-kubernetes-list-type: atomic\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                    x-kubernetes-list-type: atomic\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: |-\n                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\n                      map is equivalent to an element of matchExpressions, whose key field is \"key\", the\n                      operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              scheme:\n                description: Scheme defines the scheme for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                enum:\n                - internal\n                - internet-facing\n                type: string\n              sslPolicy:\n                description: SSLPolicy specifies the SSL Policy for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                type: string\n              subnets:\n                description: Subnets defines the subnets for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                properties:\n                  ids:\n                    description: IDs specify the resource IDs of subnets. Exactly\n                      one of this or `tags` must be specified.\n                    items:\n                      description: SubnetID specifies a subnet ID.\n                      pattern: subnet-[0-9a-f]+\n                      type: string\n                    minItems: 1\n                    type: array\n                  tags:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    description: |-\n                      Tags specifies subnets in the load balancer's VPC where each\n                      tag specified in the map key contains one of the values in the corresponding\n                      value list.\n                      Exactly one of this or `ids` must be specified.\n                    type: object\n                type: object\n              tags:\n                description: Tags defines list of Tags on AWS resources provisioned\n                  for Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  description: Tag defines a AWS Tag on resources.\n                  properties:\n                    key:\n                      description: The key of the tag.\n                      type: string\n                    value:\n                      description: The value of the tag.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              targetType:\n                description: TargetType defines the target type of target groups for\n                  all Ingresses that belong to IngressClass with this IngressClassParams.\n                enum:\n                - instance\n                - ip\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n",
            "yaml_incluster": "3d482164294ce22dfb5fd042e1f2a2121f615ef56c320e988209905fe92aa9a6"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "data.http.alb_crds",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_policy.custom",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.custom",
            "module.eks.aws_iam_role_policy_attachment.eks_auto",
            "module.eks.aws_iam_role_policy_attachment.eks_auto_additional",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.custom",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "819195744",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"Service\": \"pods.eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:TagSession"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "pods.eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "base",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1132004489",
            "json": "{\n  \"Version\": \"2012-10-17\"\n}",
            "minified_json": "{\"Version\":\"2012-10-17\"}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": null,
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lb_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1541424006",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTrustStores\",\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"elasticloadbalancing:DescribeListenerAttributes\",\n        \"elasticloadbalancing:DescribeCapacityReservation\",\n        \"ec2:GetSecurityGroupsForVpc\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeRouteTables\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeIpamPools\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateSecurityGroup\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:ModifyListenerAttributes\",\n        \"elasticloadbalancing:ModifyIpPools\",\n        \"elasticloadbalancing:ModifyCapacityReservation\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:SetRulePriorities\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"iam:CreateServiceLinkedRole\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:DescribeTrustStores\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeListenerAttributes\",\"elasticloadbalancing:DescribeCapacityReservation\",\"ec2:GetSecurityGroupsForVpc\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeRouteTables\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeIpamPools\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":\"ec2:CreateSecurityGroup\",\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":\"ec2:CreateTags\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}}},{\"Effect\":\"Allow\",\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Resource\":\"*\",\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Resource\":\"*\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:ModifyListenerAttributes\",\"elasticloadbalancing:ModifyIpPools\",\"elasticloadbalancing:ModifyCapacityReservation\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Resource\":\"*\",\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":\"elasticloadbalancing:AddTags\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:SetRulePriorities\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Resource\":\"*\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": [
              "{\n  \"Version\": \"2012-10-17\"\n}"
            ],
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeIpamPools",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeRouteTables",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "ec2:GetSecurityGroupsForVpc",
                  "elasticloadbalancing:DescribeCapacityReservation",
                  "elasticloadbalancing:DescribeListenerAttributes",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth",
                  "elasticloadbalancing:DescribeTrustStores"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateSecurityGroup"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyCapacityReservation",
                  "elasticloadbalancing:ModifyIpPools",
                  "elasticloadbalancing:ModifyListenerAttributes",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateTargetGroup",
                      "CreateLoadBalancer"
                    ],
                    "variable": "elasticloadbalancing:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetRulePriorities",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "managed",
      "type": "aws_eks_pod_identity_association",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ex-one",
          "schema_version": 0,
          "attributes": {
            "association_arn": "arn:aws:eks:us-east-1:851725332550:podidentityassociation/demo-project_dev/a-z5gjku8yctxpihsz6",
            "association_id": "a-z5gjku8yctxpihsz6",
            "cluster_name": "demo-project_dev",
            "id": "a-z5gjku8yctxpihsz6",
            "namespace": "kube-system",
            "role_arn": "arn:aws:iam::851725332550:role/aws-lbc-20250813193956491700000007",
            "service_account": "aws-lb-controller-aws-load-balancer-controller",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.aws_lb_controller_pod_identity.aws_iam_role.this",
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.assume",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lb_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:policy/AmazonEKS_LoadBalancerController-20250813193957694800000009",
            "attachment_count": 0,
            "description": "Permissions for AWS Load Balancer Controller",
            "id": "arn:aws:iam::851725332550:policy/AmazonEKS_LoadBalancerController-20250813193957694800000009",
            "name": "AmazonEKS_LoadBalancerController-20250813193957694800000009",
            "name_prefix": "AmazonEKS_LoadBalancerController-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTrustStores\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeListenerAttributes\",\"elasticloadbalancing:DescribeCapacityReservation\",\"ec2:GetSecurityGroupsForVpc\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeRouteTables\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeIpamPools\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateSecurityGroup\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:ModifyListenerAttributes\",\"elasticloadbalancing:ModifyIpPools\",\"elasticloadbalancing:ModifyCapacityReservation\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"elasticloadbalancing:AddTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:SetRulePriorities\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4MTWJGBDM3I6S5QV7",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.base",
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.lb_controller",
            "module.aws_lb_controller_pod_identity.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/aws-lbc-20250813193956491700000007",
            "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:39:57Z",
            "description": "",
            "force_detach_policies": true,
            "id": "aws-lbc-20250813193956491700000007",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "aws-lbc-20250813193956491700000007",
            "name_prefix": "aws-lbc-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDACVU667YE"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.assume"
          ]
        }
      ]
    },
    {
      "module": "module.aws_lb_controller_pod_identity",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lb_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "aws-lbc-20250813193956491700000007-20250813193958621600000012",
            "policy_arn": "arn:aws:iam::851725332550:policy/AmazonEKS_LoadBalancerController-20250813193957694800000009",
            "role": "aws-lbc-20250813193956491700000007"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.aws_lb_controller_pod_identity.aws_iam_policy.lb_controller",
            "module.aws_lb_controller_pod_identity.aws_iam_role.this",
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.assume",
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.base",
            "module.aws_lb_controller_pod_identity.data.aws_iam_policy_document.lb_controller",
            "module.aws_lb_controller_pod_identity.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "819195744",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"Service\": \"pods.eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:TagSession"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "pods.eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "base",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1132004489",
            "json": "{\n  \"Version\": \"2012-10-17\"\n}",
            "minified_json": "{\"Version\":\"2012-10-17\"}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": null,
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3448539557",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"route53:GetChange\",\n      \"Resource\": \"arn:aws:route53:::change/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ListResourceRecordSets\",\n        \"route53:ChangeResourceRecordSets\"\n      ],\n      \"Resource\": \"arn:aws:route53:::hostedzone/Z0836720IIMJRIDGN3KT\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"route53:ListHostedZonesByName\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"route53:GetChange\",\"Resource\":\"arn:aws:route53:::change/*\"},{\"Effect\":\"Allow\",\"Action\":[\"route53:ListResourceRecordSets\",\"route53:ChangeResourceRecordSets\"],\"Resource\":\"arn:aws:route53:::hostedzone/Z0836720IIMJRIDGN3KT\"},{\"Effect\":\"Allow\",\"Action\":\"route53:ListHostedZonesByName\",\"Resource\":\"*\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": [
              "{\n  \"Version\": \"2012-10-17\"\n}"
            ],
            "statement": [
              {
                "actions": [
                  "route53:GetChange"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:route53:::change/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "route53:ChangeResourceRecordSets",
                  "route53:ListResourceRecordSets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:route53:::hostedzone/Z0836720IIMJRIDGN3KT"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "route53:ListHostedZonesByName"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:policy/AmazonEKS_CertManager-20250813193956489900000002",
            "attachment_count": 0,
            "description": "Permissions for Cert Manager",
            "id": "arn:aws:iam::851725332550:policy/AmazonEKS_CertManager-20250813193956489900000002",
            "name": "AmazonEKS_CertManager-20250813193956489900000002",
            "name_prefix": "AmazonEKS_CertManager-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"route53:GetChange\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::change/*\"},{\"Action\":[\"route53:ListResourceRecordSets\",\"route53:ChangeResourceRecordSets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::hostedzone/Z0836720IIMJRIDGN3KT\"},{\"Action\":\"route53:ListHostedZonesByName\",\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4MTWJGBDK2QX7KUZG",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.cert_manager_pod_identity.data.aws_iam_policy_document.base",
            "module.cert_manager_pod_identity.data.aws_iam_policy_document.cert_manager",
            "module.cert_manager_pod_identity.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/cert-manager-20250813193956491800000008",
            "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:39:57Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cert-manager-20250813193956491800000008",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cert-manager-20250813193956491800000008",
            "name_prefix": "cert-manager-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDD46D42TRK"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.cert_manager_pod_identity.data.aws_iam_policy_document.assume"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager_pod_identity",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager-20250813193956491800000008-20250813193958244600000010",
            "policy_arn": "arn:aws:iam::851725332550:policy/AmazonEKS_CertManager-20250813193956489900000002",
            "role": "cert-manager-20250813193956491800000008"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.cert_manager_pod_identity.aws_iam_policy.cert_manager",
            "module.cert_manager_pod_identity.aws_iam_role.this",
            "module.cert_manager_pod_identity.data.aws_iam_policy_document.assume",
            "module.cert_manager_pod_identity.data.aws_iam_policy_document.base",
            "module.cert_manager_pod_identity.data.aws_iam_policy_document.cert_manager",
            "module.cert_manager_pod_identity.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "819195744",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"Service\": \"pods.eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:TagSession"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "pods.eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "base",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1132004489",
            "json": "{\n  \"Version\": \"2012-10-17\"\n}",
            "minified_json": "{\"Version\":\"2012-10-17\"}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": null,
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "130450683",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"eks:DescribeNodegroup\",\n        \"ec2:GetInstanceTypesFromInstanceRequirements\",\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"ec2:DescribeInstanceTypes\",\n        \"ec2:DescribeImages\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeScalingActivities\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/foo\": \"owned\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"eks:DescribeNodegroup\",\"ec2:GetInstanceTypesFromInstanceRequirements\",\"ec2:DescribeLaunchTemplateVersions\",\"ec2:DescribeInstanceTypes\",\"ec2:DescribeImages\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeScalingActivities\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeAutoScalingGroups\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"autoscaling:SetDesiredCapacity\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"autoscaling:ResourceTag/kubernetes.io/cluster/foo\":\"owned\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": [
              "{\n  \"Version\": \"2012-10-17\"\n}"
            ],
            "statement": [
              {
                "actions": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeScalingActivities",
                  "autoscaling:DescribeTags",
                  "ec2:DescribeImages",
                  "ec2:DescribeInstanceTypes",
                  "ec2:DescribeLaunchTemplateVersions",
                  "ec2:GetInstanceTypesFromInstanceRequirements",
                  "eks:DescribeNodegroup"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "autoscaling:ResourceTag/kubernetes.io/cluster/foo"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "managed",
      "type": "aws_eks_pod_identity_association",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ex-one",
          "schema_version": 0,
          "attributes": {
            "association_arn": "arn:aws:eks:us-east-1:851725332550:podidentityassociation/demo-project_dev/a-id8oixgzcnpgfebmi",
            "association_id": "a-id8oixgzcnpgfebmi",
            "cluster_name": "demo-project_dev",
            "id": "a-id8oixgzcnpgfebmi",
            "namespace": "kube-system",
            "role_arn": "arn:aws:iam::851725332550:role/cluster-autoscaler-20250813193956491000000004",
            "service_account": "cluster-autoscaler-aws-cluster-autoscaler",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.cluster_autoscaler_pod_identity.aws_iam_role.this",
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.assume",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:policy/AmazonEKS_ClusterAutoscaler-20250813193956488600000001",
            "attachment_count": 0,
            "description": "Permissions for Cluster Autoscaler",
            "id": "arn:aws:iam::851725332550:policy/AmazonEKS_ClusterAutoscaler-20250813193956488600000001",
            "name": "AmazonEKS_ClusterAutoscaler-20250813193956488600000001",
            "name_prefix": "AmazonEKS_ClusterAutoscaler-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"eks:DescribeNodegroup\",\"ec2:GetInstanceTypesFromInstanceRequirements\",\"ec2:DescribeLaunchTemplateVersions\",\"ec2:DescribeInstanceTypes\",\"ec2:DescribeImages\",\"autoscaling:DescribeTags\",\"autoscaling:DescribeScalingActivities\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeAutoScalingGroups\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"autoscaling:SetDesiredCapacity\"],\"Condition\":{\"StringEquals\":{\"autoscaling:ResourceTag/kubernetes.io/cluster/foo\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4MTWJGBDAKCFJYVBU",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.base",
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.cluster_autoscaler"
          ]
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/cluster-autoscaler-20250813193956491000000004",
            "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:39:57Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cluster-autoscaler-20250813193956491000000004",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cluster-autoscaler-20250813193956491000000004",
            "name_prefix": "cluster-autoscaler-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Environment": "dev"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDEXGEGVMOR"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.assume"
          ]
        }
      ]
    },
    {
      "module": "module.cluster_autoscaler_pod_identity",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_autoscaler",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cluster-autoscaler-20250813193956491000000004-2025081319395810830000000c",
            "policy_arn": "arn:aws:iam::851725332550:policy/AmazonEKS_ClusterAutoscaler-20250813193956488600000001",
            "role": "cluster-autoscaler-20250813193956491000000004"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.cluster_autoscaler_pod_identity.aws_iam_policy.cluster_autoscaler",
            "module.cluster_autoscaler_pod_identity.aws_iam_role.this",
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.assume",
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.base",
            "module.cluster_autoscaler_pod_identity.data.aws_iam_policy_document.cluster_autoscaler"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "851725332550",
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "851725332550",
            "user_id": "AIDA4MTWJGBDKC7FRJUQV"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_eks_addon_version",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "id": "aws-ebs-csi-driver",
            "kubernetes_version": "1.32",
            "most_recent": true,
            "version": "v1.47.0-eksbuild.1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        },
        {
          "index_key": "coredns",
          "schema_version": 0,
          "attributes": {
            "addon_name": "coredns",
            "id": "coredns",
            "kubernetes_version": "1.32",
            "most_recent": true,
            "version": "v1.11.4-eksbuild.20"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        },
        {
          "index_key": "eks-pod-identity-agent",
          "schema_version": 0,
          "attributes": {
            "addon_name": "eks-pod-identity-agent",
            "id": "eks-pod-identity-agent",
            "kubernetes_version": "1.32",
            "most_recent": true,
            "version": "v1.3.8-eksbuild.2"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        },
        {
          "index_key": "kube-proxy",
          "schema_version": 0,
          "attributes": {
            "addon_name": "kube-proxy",
            "id": "kube-proxy",
            "kubernetes_version": "1.32",
            "most_recent": true,
            "version": "v1.32.6-eksbuild.6"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        },
        {
          "index_key": "vpc-cni",
          "schema_version": 0,
          "attributes": {
            "addon_name": "vpc-cni",
            "id": "vpc-cni",
            "kubernetes_version": "1.32",
            "most_recent": true,
            "version": "v1.20.1-eksbuild.1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2830595799",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:TagSession"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "513122117",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Compute\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RunInstances\",\n        \"ec2:CreateLaunchTemplate\",\n        \"ec2:CreateFleet\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        },\n        \"StringLike\": {\n          \"aws:RequestTag/eks:kubernetes-node-class-name\": \"*\",\n          \"aws:RequestTag/eks:kubernetes-node-pool-name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"Storage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\",\n        \"ec2:CreateSnapshot\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"Networking\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateNetworkInterface\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\",\n          \"aws:RequestTag/eks:kubernetes-cni-node-name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"LoadBalancer\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateLoadBalancer\",\n        \"elasticloadbalancing:CreateListener\",\n        \"ec2:CreateSecurityGroup\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"ShieldProtection\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"shield:CreateProtection\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"ShieldTagResource\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"shield:TagResource\",\n      \"Resource\": \"arn:aws:shield::*:protection/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/eks:eks-cluster-name\": \"${aws:PrincipalTag/eks:eks-cluster-name}\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Compute\",\"Effect\":\"Allow\",\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}}},{\"Sid\":\"Storage\",\"Effect\":\"Allow\",\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}},{\"Sid\":\"Networking\",\"Effect\":\"Allow\",\"Action\":\"ec2:CreateNetworkInterface\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}}},{\"Sid\":\"LoadBalancer\",\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}},{\"Sid\":\"ShieldProtection\",\"Effect\":\"Allow\",\"Action\":\"shield:CreateProtection\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}},{\"Sid\":\"ShieldTagResource\",\"Effect\":\"Allow\",\"Action\":\"shield:TagResource\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:CreateFleet",
                  "ec2:CreateLaunchTemplate",
                  "ec2:RunInstances"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "${aws:PrincipalTag/eks:eks-cluster-name}"
                    ],
                    "variable": "aws:RequestTag/eks:eks-cluster-name"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/eks:kubernetes-node-class-name"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/eks:kubernetes-node-pool-name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "Compute"
              },
              {
                "actions": [
                  "ec2:CreateSnapshot",
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "${aws:PrincipalTag/eks:eks-cluster-name}"
                    ],
                    "variable": "aws:RequestTag/eks:eks-cluster-name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": "Storage"
              },
              {
                "actions": [
                  "ec2:CreateNetworkInterface"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "${aws:PrincipalTag/eks:eks-cluster-name}"
                    ],
                    "variable": "aws:RequestTag/eks:eks-cluster-name"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/eks:kubernetes-cni-node-name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "Networking"
              },
              {
                "actions": [
                  "ec2:CreateSecurityGroup",
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "${aws:PrincipalTag/eks:eks-cluster-name}"
                    ],
                    "variable": "aws:RequestTag/eks:eks-cluster-name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "LoadBalancer"
              },
              {
                "actions": [
                  "shield:CreateProtection"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "${aws:PrincipalTag/eks:eks-cluster-name}"
                    ],
                    "variable": "aws:RequestTag/eks:eks-cluster-name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "ShieldProtection"
              },
              {
                "actions": [
                  "shield:TagResource"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "${aws:PrincipalTag/eks:eks-cluster-name}"
                    ],
                    "variable": "aws:RequestTag/eks:eks-cluster-name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:shield::*:protection/*"
                ],
                "sid": "ShieldTagResource"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "arn:aws:iam::851725332550:user/cloud_user",
            "issuer_arn": "arn:aws:iam::851725332550:user/cloud_user",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF5zCCBM+gAwIBAgIQB8/B5LYdWaaSLNb9DZLprTANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI1MDIyNjAwMDAwMFoXDTI2MDMyNzIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoHWcgrIv/D6CxSXSxAq0GuOPoCJqnVz6U\nMhp1YLE9OZs3jH8EfYlNpGtqOtLa1vZb8Lp4CZdATHTj1SoK01MwmXXIDm2Jj+Km\niQvZ0BBe5xroDWvf3r/LWG/WMkRtR4F+qPb9pVYlM9N3WZdSAKfTQTowGxebugLc\nM/+ZLvAxxdtaXK+LID6JRKRa2BIRHcfILiNJo7vIS/I+DOqXn9Rb0VFnkpYpGE+k\nm47kVkFFsToior7zlAwPv6VWsm+zZV9zNnCpu9FpJ3vkZE9OGHS6aChtSya2Qpyr\njyF98KIFTQ+FKtDZHf9XLHmV5v/IP2bWk7lzmPYW4PwcPhDUmC9PAgMBAAGjggL3\nMIIC8zAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4EFgQU\n6mCbzMC1FaJuw7tKpv7muQZDZrowKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0x\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMy5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDMuYW1h\nem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBfwYKKwYBBAHW\neQIEAgSCAW8EggFrAWkAdgAOV5S8866pPjMbLJkHs/eQ35vCPXEyJd0hqSWsYcVO\nIQAAAZVBW4SGAAAEAwBHMEUCIQC+CghIdRNpEnK+JGxaeHOel/pYJSUsog1eklre\nLGmoTwIgAj1vm4d6u/93S7GVfw7qotajiMfgHeEf7lANQf0mxf4AdgBkEcRspBLs\np4kcogIuALyrTygH1B41J6vq/tUDyX3N8AAAAZVBW4Q1AAAEAwBHMEUCIAYyeDIv\nJD1IhUkb1E59cbCwTcAYChrSArEZOOAib3dJAiEAix8XjjqXhMNuji/u2fzLxeZ7\nc5PCtDHWx3Ky7QYBfCUAdwBJnJtp3h187Pw23s2HZKa4W68Kh4AZ0VVS++nrKd34\nwwAAAZVBW4RMAAAEAwBIMEYCIQCsj67XcK6jtETNJEPTYPaFqJOMlNtM0TeJwGhm\nBc81sQIhAJoirhaQzC4ydAzLvjpVqKYyuqLktiHkTqFq8IGxBAkIMA0GCSqGSIb3\nDQEBCwUAA4IBAQAjjE2au5fdV/DrlD3e5zZ5hTB4CicIARTWvJQ6EsQm/vbXPoUY\nSHRZkOodq0AJWEC/RImGu8bnVY8RzGsELkMzI4A8UxdlH2YGP8obg6MfP6yGZaHM\nnS4wLX05EnmrABaoRB/apt7tE4w+yRa7QoxUgiTPpFzaQVv1mTcGaWMG55U8tPg7\nLXm539O4OBukbP8HNvjBZ8+N0RYrtG0u0M4FMX1hMKG0bkjJiU6MVZfGJWcgp7I4\nbd5cj5SfE1EHL70P7ELaocXjnWKbys9Mc870aoRXVfAC4bZWU6F9Ke3O7ioXXd5L\n0mKQwrjkiglpYaXc247Qi8IUCdk6s13xHJ4e\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2026-03-27T23:59:59Z",
                "not_before": "2025-02-26T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "10383334045647432453656403708671617453",
                "sha1_fingerprint": "63462dda480d8b900e0a7dbfaf6238a62ba4fce0",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-east-1.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "922877a0975ad078a65b8ff11ebc47b8311945c7",
            "url": "https://oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA",
            "verify_chain": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:851725332550:log-group:/aws/eks/demo-project_dev/cluster",
            "id": "/aws/eks/demo-project_dev/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/demo-project_dev/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/demo-project_dev/cluster"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "/aws/eks/demo-project_dev/cluster",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "Administrators",
          "schema_version": 0,
          "attributes": {
            "access_entry_arn": "arn:aws:eks:us-east-1:851725332550:access-entry/demo-project_dev/user/851725332550/cloud_user/6ecc527e-24fa-37fb-7ba3-5a6b8bd31e5d",
            "cluster_name": "demo-project_dev",
            "created_at": "2025-08-13T19:50:54Z",
            "id": "demo-project_dev:arn:aws:iam::851725332550:user/cloud_user",
            "kubernetes_groups": [],
            "modified_at": "2025-08-13T19:50:54Z",
            "principal_arn": "arn:aws:iam::851725332550:user/cloud_user",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "timeouts": null,
            "type": "STANDARD",
            "user_name": "arn:aws:iam::851725332550:user/cloud_user"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_access_policy_association",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "Administrators_admin",
          "schema_version": 0,
          "attributes": {
            "access_scope": [
              {
                "namespaces": null,
                "type": "cluster"
              }
            ],
            "associated_at": "2025-08-13 19:50:55.438 +0000 UTC",
            "cluster_name": "demo-project_dev",
            "id": "demo-project_dev#arn:aws:iam::851725332550:user/cloud_user#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "modified_at": "2025-08-13 19:50:55.438 +0000 UTC",
            "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "principal_arn": "arn:aws:iam::851725332550:user/cloud_user",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "before_compute",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "vpc-cni",
          "schema_version": 0,
          "attributes": {
            "addon_name": "vpc-cni",
            "addon_version": "v1.20.1-eksbuild.1",
            "arn": "arn:aws:eks:us-east-1:851725332550:addon/demo-project_dev/vpc-cni/10cc527e-25d0-e09f-8832-792d6b11fc7f",
            "cluster_name": "demo-project_dev",
            "configuration_values": "",
            "created_at": "2025-08-13T19:50:54Z",
            "id": "demo-project_dev:vpc-cni",
            "modified_at": "2025-08-13T19:51:02Z",
            "pod_identity_association": [],
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "addon_version": "v1.47.0-eksbuild.1",
            "arn": "arn:aws:eks:us-east-1:851725332550:addon/demo-project_dev/aws-ebs-csi-driver/3ecc527f-c638-aac6-3698-ad749910f7e1",
            "cluster_name": "demo-project_dev",
            "configuration_values": "",
            "created_at": "2025-08-13T19:54:28Z",
            "id": "demo-project_dev:aws-ebs-csi-driver",
            "modified_at": "2025-08-13T19:55:15Z",
            "pod_identity_association": [],
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "coredns",
          "schema_version": 0,
          "attributes": {
            "addon_name": "coredns",
            "addon_version": "v1.11.4-eksbuild.20",
            "arn": "arn:aws:eks:us-east-1:851725332550:addon/demo-project_dev/coredns/3ccc527f-c63b-1d06-a897-445c04d35732",
            "cluster_name": "demo-project_dev",
            "configuration_values": "",
            "created_at": "2025-08-13T19:54:28Z",
            "id": "demo-project_dev:coredns",
            "modified_at": "2025-08-13T19:54:40Z",
            "pod_identity_association": [],
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "eks-pod-identity-agent",
          "schema_version": 0,
          "attributes": {
            "addon_name": "eks-pod-identity-agent",
            "addon_version": "v1.3.8-eksbuild.2",
            "arn": "arn:aws:eks:us-east-1:851725332550:addon/demo-project_dev/eks-pod-identity-agent/accc527f-c63e-3df8-2a85-537f956a6075",
            "cluster_name": "demo-project_dev",
            "configuration_values": "",
            "created_at": "2025-08-13T19:54:28Z",
            "id": "demo-project_dev:eks-pod-identity-agent",
            "modified_at": "2025-08-13T19:55:04Z",
            "pod_identity_association": [],
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "kube-proxy",
          "schema_version": 0,
          "attributes": {
            "addon_name": "kube-proxy",
            "addon_version": "v1.32.6-eksbuild.6",
            "arn": "arn:aws:eks:us-east-1:851725332550:addon/demo-project_dev/kube-proxy/22cc527f-c640-e399-a768-b72c7414eed9",
            "cluster_name": "demo-project_dev",
            "configuration_values": "",
            "created_at": "2025-08-13T19:54:28Z",
            "id": "demo-project_dev:kube-proxy",
            "modified_at": "2025-08-13T19:55:04Z",
            "pod_identity_association": [],
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-east-1:851725332550:cluster/demo-project_dev",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRDVrS0hWR0k5WmN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBNE1UTXhPVFF3TXpKYUZ3MHpOVEE0TVRFeE9UUTFNekphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURyWUhVVkpCWDY1WFk4NWNhajgzUGNiL2dPYTQzc1ErQnBlUFhBT01wMElpam5EbDVMUit3dzBhTTEKeEQ4Tkx1Y2Z5RmxjZmF0bGhwK1Uzdng5ZUFiRGUxaC96QTlKVlhKRHRBRVFPNjhOSjFuOEZ5YkV6bW9WNkVRNAo5cEVVMzRtZENzejRMRmZXZVZpTzA2L2J6L1BuM3JCL1c1WU5TbFVtaXJUaXlrbmhJd1dGWE04bzV5VG9uOUwrCld6Q21KenlQeHRjNHptbkpkREYvSHBjZHAxTExZQ3pHYU00MXBZejA5OUVuWlppSjV1NG5aRnM2SG9kRWtLcnkKRWIwbE02Nk1PaWNrZ0dacXlZVFY1Nms3T0NtU05lRXNnTlVvZzNzTlgwUmc0Y3NIckc3M1RnekZrNndQc3JzNgo4WVVEaVlQRW5pMDdtQXZuYU0rVzhwYlZ1YS9qQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSZVpSeUk2QWdRQlR2VFIrNmhxVERaa21jdE9qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnhNYXh4Vk1qcQp2TWxhbmJNSFMxeC9aejJmaUczTTM0SGppekVzVWIvclRUclhpUXZmcmJuaXNxQ1RXL1hxRVVEWHcxOXFRZDdGCjdMdFB4czNnWnFEdDYrTUZGZ1FnczgxYUgxcm10a1JwcmFkVmVyOWJ2N1p2dXV5blFGMjNXOTA4bmlKVXUxSUcKK2h6SldUTnlpQnFnQ2gyT0JReVlTVytzZGtxb2QxemJoTlhrV1A2cVFkejFZQSsvckNJUFV4WmtNL3BmbVhaagpyQXZYbUZGU00rcTF0Y0FLVDFrTkpQMVQvNEE4ajF4cVJXc0hOSXdtQ3dROWN6eEJnQ2hOb2pOS3lPRXdtV1RZCm1tSU9DNXJ0SXdMRXl0bThmU21ONHZaMG1MTWZkb2ZwTURGT1Rja0hMUUxyd1p4TG43b0tkS0srSGs0elo2cXIKMnhuT09Ublg0VEp4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "compute_config": [],
            "created_at": "2025-08-13T19:40:28Z",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-east-1:851725332550:key/ac8ad9a7-d592-490d-b645-f502b087f2d1"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://E3C4969F2BBE773A54BDCE93157C5FDA.gr7.us-east-1.eks.amazonaws.com",
            "force_update_version": null,
            "id": "demo-project_dev",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "elastic_load_balancing": [
                  {
                    "enabled": false
                  }
                ],
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "demo-project_dev",
            "outpost_config": [],
            "platform_version": "eks.16",
            "remote_network_config": [],
            "role_arn": "arn:aws:iam::851725332550:role/demo-project_dev-cluster-20250813193956491700000006",
            "status": "ACTIVE",
            "storage_config": [],
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true",
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.32",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0ef03ad0a3226a95b",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0cea67ef69318cedc"
                ],
                "subnet_ids": [
                  "subnet-00b492dfc5dff319c",
                  "subnet-00f18c05642421c4f",
                  "subnet-094ec5727ff995ddf"
                ],
                "vpc_id": "vpc-0bcf4e5cc68b61c06"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::851725332550:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA",
            "tags": {
              "Name": "demo-project_dev-eks-irsa"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project_dev-eks-irsa",
              "Terraform": "true"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:policy/demo-project_dev-cluster-ClusterEncryption20250813194023834700000020",
            "attachment_count": 0,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::851725332550:policy/demo-project_dev-cluster-ClusterEncryption20250813194023834700000020",
            "name": "demo-project_dev-cluster-ClusterEncryption20250813194023834700000020",
            "name_prefix": "demo-project_dev-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:851725332550:key/ac8ad9a7-d592-490d-b645-f502b087f2d1\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4MTWJGBDJMJUIKOXD",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:policy/demo-project_dev-cluster-2025081319395774150000000a",
            "attachment_count": 0,
            "description": "",
            "id": "arn:aws:iam::851725332550:policy/demo-project_dev-cluster-2025081319395774150000000a",
            "name": "demo-project_dev-cluster-2025081319395774150000000a",
            "name_prefix": "demo-project_dev-cluster-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"},\"StringLike\":{\"aws:RequestTag/eks:kubernetes-node-class-name\":\"*\",\"aws:RequestTag/eks:kubernetes-node-pool-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Compute\"},{\"Action\":[\"ec2:CreateVolume\",\"ec2:CreateSnapshot\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"],\"Sid\":\"Storage\"},{\"Action\":\"ec2:CreateNetworkInterface\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\",\"aws:RequestTag/eks:kubernetes-cni-node-name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"Networking\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateListener\",\"ec2:CreateSecurityGroup\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoadBalancer\"},{\"Action\":\"shield:CreateProtection\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"ShieldProtection\"},{\"Action\":\"shield:TagResource\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/eks:eks-cluster-name\":\"${aws:PrincipalTag/eks:eks-cluster-name}\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:shield::*:protection/*\",\"Sid\":\"ShieldTagResource\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4MTWJGBDDTZCNKM2K",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.custom",
            "module.eks.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/demo-project_dev-cluster-20250813193956491700000006",
            "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:39:57Z",
            "description": "",
            "force_detach_policies": true,
            "id": "demo-project_dev-cluster-20250813193956491700000006",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "demo-project_dev-cluster-20250813193956491700000006",
            "name_prefix": "demo-project_dev-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDJT7OWRV5K"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "demo-project_dev-cluster-20250813193956491700000006-20250813194024649200000021",
            "policy_arn": "arn:aws:iam::851725332550:policy/demo-project_dev-cluster-ClusterEncryption20250813194023834700000020",
            "role": "demo-project_dev-cluster-20250813193956491700000006"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "demo-project_dev-cluster-20250813193956491700000006-20250813193958768400000013",
            "policy_arn": "arn:aws:iam::851725332550:policy/demo-project_dev-cluster-2025081319395774150000000a",
            "role": "demo-project_dev-cluster-20250813193956491700000006"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.custom",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.custom",
            "module.eks.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "demo-project_dev-cluster-20250813193956491700000006-20250813193958262700000011",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "demo-project_dev-cluster-20250813193956491700000006"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "demo-project_dev-cluster-20250813193956491700000006-2025081319395824040000000f",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "demo-project_dev-cluster-20250813193956491700000006"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:security-group/sg-0cea67ef69318cedc",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0cea67ef69318cedc",
            "ingress": [],
            "name": "demo-project_dev-cluster-20250813194012276500000019",
            "name_prefix": "demo-project_dev-cluster-",
            "owner_id": "851725332550",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "demo-project_dev-cluster"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project_dev-cluster",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:security-group/sg-0b37f44b420a70130",
            "description": "EKS node shared security group",
            "egress": [],
            "id": "sg-0b37f44b420a70130",
            "ingress": [],
            "name": "demo-project_dev-node-20250813194010572100000017",
            "name_prefix": "demo-project_dev-node-",
            "owner_id": "851725332550",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "demo-project_dev-node",
              "kubernetes.io/cluster/demo-project_dev": "owned"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project_dev-node",
              "Terraform": "true",
              "kubernetes.io/cluster/demo-project_dev": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-2816934532",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0cea67ef69318cedc",
            "security_group_rule_id": "sgr-05b77d830c6ec14f3",
            "self": false,
            "source_security_group_id": "sg-0b37f44b420a70130",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-1416438892",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-0b455013acae468f6",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-3468361284",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-08ef48ffa105de391",
            "self": false,
            "source_security_group_id": "sg-0cea67ef69318cedc",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-4099461029",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-0045e718e51cfeed3",
            "self": false,
            "source_security_group_id": "sg-0cea67ef69318cedc",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-1025157171",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-0b76e9f258d0d4884",
            "self": false,
            "source_security_group_id": "sg-0cea67ef69318cedc",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-776377362",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-0a064a0c752a11879",
            "self": false,
            "source_security_group_id": "sg-0cea67ef69318cedc",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-1256695769",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-02d590113d9f75605",
            "self": false,
            "source_security_group_id": "sg-0cea67ef69318cedc",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-1501945950",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-09b9d75b700c43ecb",
            "self": false,
            "source_security_group_id": "sg-0cea67ef69318cedc",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-3979325491",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-07c57d2501acfad2a",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-2799838469",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-0fc693342e8949b24",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-45975274",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-0b37f44b420a70130",
            "security_group_rule_id": "sgr-0103b8c3e15a57c5b",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2025-08-13T19:51:23Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRDVrS0hWR0k5WmN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBNE1UTXhPVFF3TXpKYUZ3MHpOVEE0TVRFeE9UUTFNekphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURyWUhVVkpCWDY1WFk4NWNhajgzUGNiL2dPYTQzc1ErQnBlUFhBT01wMElpam5EbDVMUit3dzBhTTEKeEQ4Tkx1Y2Z5RmxjZmF0bGhwK1Uzdng5ZUFiRGUxaC96QTlKVlhKRHRBRVFPNjhOSjFuOEZ5YkV6bW9WNkVRNAo5cEVVMzRtZENzejRMRmZXZVZpTzA2L2J6L1BuM3JCL1c1WU5TbFVtaXJUaXlrbmhJd1dGWE04bzV5VG9uOUwrCld6Q21KenlQeHRjNHptbkpkREYvSHBjZHAxTExZQ3pHYU00MXBZejA5OUVuWlppSjV1NG5aRnM2SG9kRWtLcnkKRWIwbE02Nk1PaWNrZ0dacXlZVFY1Nms3T0NtU05lRXNnTlVvZzNzTlgwUmc0Y3NIckc3M1RnekZrNndQc3JzNgo4WVVEaVlQRW5pMDdtQXZuYU0rVzhwYlZ1YS9qQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSZVpSeUk2QWdRQlR2VFIrNmhxVERaa21jdE9qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnhNYXh4Vk1qcQp2TWxhbmJNSFMxeC9aejJmaUczTTM0SGppekVzVWIvclRUclhpUXZmcmJuaXNxQ1RXL1hxRVVEWHcxOXFRZDdGCjdMdFB4czNnWnFEdDYrTUZGZ1FnczgxYUgxcm10a1JwcmFkVmVyOWJ2N1p2dXV5blFGMjNXOTA4bmlKVXUxSUcKK2h6SldUTnlpQnFnQ2gyT0JReVlTVytzZGtxb2QxemJoTlhrV1A2cVFkejFZQSsvckNJUFV4WmtNL3BmbVhaagpyQXZYbUZGU00rcTF0Y0FLVDFrTkpQMVQvNEE4ajF4cVJXc0hOSXdtQ3dROWN6eEJnQ2hOb2pOS3lPRXdtV1RZCm1tSU9DNXJ0SXdMRXl0bThmU21ONHZaMG1MTWZkb2ZwTURGT1Rja0hMUUxyd1p4TG43b0tkS0srSGs0elo2cXIKMnhuT09Ublg0VEp4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://E3C4969F2BBE773A54BDCE93157C5FDA.gr7.us-east-1.eks.amazonaws.com",
              "cluster_name": "demo-project_dev",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.32"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "851725332550",
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "851725332550",
            "user_id": "AIDA4MTWJGBDKC7FRJUQV"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2023_x86_64_STANDARD",
            "arn": "arn:aws:eks:us-east-1:851725332550:nodegroup/demo-project_dev/demo_project-20250813195133436600000028/fccc527e-720c-e2c9-3145-3c2b1793aed3",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "demo-project_dev",
            "disk_size": 0,
            "force_update_version": null,
            "id": "demo-project_dev:demo_project-20250813195133436600000028",
            "instance_types": [
              "t3.medium"
            ],
            "labels": null,
            "launch_template": [
              {
                "id": "lt-09c194657641673ac",
                "name": "demo_project-20250813195124178800000026",
                "version": "1"
              }
            ],
            "node_group_name": "demo_project-20250813195133436600000028",
            "node_group_name_prefix": "demo_project-",
            "node_repair_config": [],
            "node_role_arn": "arn:aws:iam::851725332550:role/demo_project-eks-node-group-20250813193956491000000003",
            "release_version": "1.32.7-20250807",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-demo_project-20250813195133436600000028-fccc527e-720c-e2c9-3145-3c2b1793aed3"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 5,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-00b492dfc5dff319c",
              "subnet-00f18c05642421c4f",
              "subnet-094ec5727ff995ddf"
            ],
            "tags": {
              "Name": "demo_project"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo_project",
              "Terraform": "true"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.32"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/demo_project-eks-node-group-20250813193956491000000003",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:39:57Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "demo_project-eks-node-group-20250813193956491000000003",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "demo_project-eks-node-group-20250813193956491000000003",
            "name_prefix": "demo_project-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDEVCO7JKL6"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "demo_project-eks-node-group-20250813193956491000000003-2025081319395810170000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "demo_project-eks-node-group-20250813193956491000000003"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "demo_project-eks-node-group-20250813193956491000000003-2025081319395812470000000d",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "demo_project-eks-node-group-20250813193956491000000003"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "demo_project-eks-node-group-20250813193956491000000003-2025081319395814390000000e",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "demo_project-eks-node-group-20250813193956491000000003"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:launch-template/lt-09c194657641673ac",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "true",
                    "iops": 0,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "throughput": 0,
                    "volume_initialization_rate": 0,
                    "volume_size": 60,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for demo_project EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-09c194657641673ac",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "demo_project-20250813195124178800000026",
            "name_prefix": "demo_project-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "demo_project"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "demo_project"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "demo_project"
                }
              }
            ],
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "update_default_version": true,
            "user_data": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSJNSU1FQk9VTkRBUlkiCk1JTUUtVmVyc2lvbjogMS4wDQoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL25vZGUuZWtzLmF3cw0KTWltZS1WZXJzaW9uOiAxLjANCg0KLS0tCmFwaVZlcnNpb246IG5vZGUuZWtzLmF3cy92MWFscGhhMQpraW5kOiBOb2RlQ29uZmlnCnNwZWM6CiAga3ViZWxldDoKICAgIGNvbmZpZzoKICAgICAgc2h1dGRvd25HcmFjZVBlcmlvZDogMzBzCiAgICAgIGZlYXR1cmVHYXRlczoKICAgICAgICBEaXNhYmxlS3ViZWxldENsb3VkQ3JlZGVudGlhbFByb3ZpZGVyczogdHJ1ZQogICAgZmxhZ3M6CiAgICAgIC0gLS1ub2RlLWxhYmVscz10ZXJyYWZvcm0tbWFuYWdlZD10cnVlLGNsdXN0ZXItbmFtZT1kZW1vLXByb2plY3RfZGV2Cg0KLS1NSU1FQk9VTkRBUlkNCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQNCkNvbnRlbnQtVHlwZTogdGV4dC94LXNoZWxsc2NyaXB0DQpNaW1lLVZlcnNpb246IDEuMA0KDQojIS9iaW4vYmFzaAplY2hvICJJbnN0YW5jZSBJbml0aWFsaXphdGlvbiBTY3JpcHQiCg0KLS1NSU1FQk9VTkRBUlkNCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vbm9kZS5la3MuYXdzDQpNaW1lLVZlcnNpb246IDEuMA0KDQotLS0KYXBpVmVyc2lvbjogbm9kZS5la3MuYXdzL3YxYWxwaGExCmtpbmQ6IE5vZGVDb25maWcKc3BlYzoKICBjbHVzdGVyOgogICAgbmFtZTogZGVtby1wcm9qZWN0X2RldgogICAgYXBpU2VydmVyRW5kcG9pbnQ6IGh0dHBzOi8vRTNDNDk2OUYyQkJFNzczQTU0QkRDRTkzMTU3QzVGREEuZ3I3LnVzLWVhc3QtMS5la3MuYW1hem9uYXdzLmNvbQogICAgY2VydGlmaWNhdGVBdXRob3JpdHk6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJDVkVORFFXVXlaMEYzU1VKQlowbEpSRFZyUzBoV1IwazVXbU4zUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRsUkJORTFVVFhoUFZGRjNUWHBLWVVaM01IcE9WRUUwVFZSRmVFOVVVVEZOZWtwaFRVSlZlQXBGZWtGU1FtZE9Wa0pCVFZSRGJYUXhXVzFXZVdKdFZqQmFXRTEzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYZG5aMFZMQ2tGdlNVSkJVVVJ5V1VoVlZrcENXRFkxV0ZrNE5XTmhhamd6VUdOaUwyZFBZVFF6YzFFclFuQmxVRmhCVDAxd01FbHBhbTVFYkRWTVVpdDNkekJoVFRFS2VFUTRUa3gxWTJaNVJteGpabUYwYkdod0sxVXpkbmc1WlVGaVJHVXhhQzk2UVRsS1ZsaEtSSFJCUlZGUE5qaE9TakZ1T0VaNVlrVjZiVzlXTmtWUk5BbzVjRVZWTXpSdFpFTnplalJNUm1aWFpWWnBUekEyTDJKNkwxQnVNM0pDTDFjMVdVNVRiRlZ0YVhKVWFYbHJibWhKZDFkR1dFMDRielY1Vkc5dU9Vd3JDbGQ2UTIxS2VubFFlSFJqTkhwdGJrcGtSRVl2U0hCalpIQXhURXhaUTNwSFlVMDBNWEJaZWpBNU9VVnVXbHBwU2pWMU5HNWFSbk0yU0c5a1JXdExjbmtLUldJd2JFMDJOazFQYVdOclowZGFjWGxaVkZZMU5tczNUME50VTA1bFJYTm5UbFZ2WnpOelRsZ3dVbWMwWTNOSWNrYzNNMVJuZWtack5uZFFjM0p6TmdvNFdWVkVhVmxRUlc1cE1EZHRRWFp1WVUwclZ6aHdZbFoxWVM5cVFXZE5Ra0ZCUjJwWFZFSllUVUUwUjBFeFZXUkVkMFZDTDNkUlJVRjNTVU53UkVGUUNrSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZUVUl3UjBFeFZXUkVaMUZYUWtKU1pWcFNlVWsyUVdkUlFsUjJWRklyTm1oeFZFUmFhMjFqZEU5cVFWWUtRbWRPVmtoU1JVVkVha0ZOWjJkd2NtUlhTbXhqYlRWc1pFZFdlazFCTUVkRFUzRkhVMGxpTTBSUlJVSkRkMVZCUVRSSlFrRlJRbmhOWVhoNFZrMXFjUXAyVFd4aGJtSk5TRk14ZUM5YWVqSm1hVWN6VFRNMFNHcHBla1Z6VldJdmNsUlVjbGhwVVhabWNtSnVhWE54UTFSWEwxaHhSVlZFV0hjeE9YRlJaRGRHQ2pkTWRGQjRjek5uV25GRWREWXJUVVpHWjFGbmN6Z3hZVWd4Y20xMGExSndjbUZrVm1WeU9XSjJOMXAyZFhWNWJsRkdNak5YT1RBNGJtbEtWWFV4U1VjS0syaDZTbGRVVG5scFFuRm5RMmd5VDBKUmVWbFRWeXR6Wkd0eGIyUXhlbUpvVGxoclYxQTJjVkZrZWpGWlFTc3Zja05KVUZWNFdtdE5MM0JtYlZoYWFncHlRWFpZYlVaR1UwMHJjVEYwWTBGTFZERnJUa3BRTVZRdk5FRTRhakY0Y1ZKWGMwaE9TWGR0UTNkUk9XTjZlRUpuUTJoT2IycE9TM2xQUlhkdFYxUlpDbTF0U1U5RE5YSjBTWGRNUlhsMGJUaG1VMjFPTkhaYU1HMU1UV1prYjJad1RVUkdUMVJqYTBoTVVVeHlkMXA0VEc0M2IwdGtTMHNyU0dzMGVsbzJjWElLTW5odVQwOVVibGcwVkVwNENpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogICAgY2lkcjogMTcyLjIwLjAuMC8xNgoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdA0KTWltZS1WZXJzaW9uOiAxLjANCg0KIyEvYmluL2Jhc2gKZWNobyAiUG9zdCBJbnN0YW5jZSBJbml0aWFsaXphdGlvbiBTY3JpcHQiCg0KLS1NSU1FQk9VTkRBUlktLQ0K",
            "vpc_security_group_ids": [
              "sg-0b37f44b420a70130"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"].module.user_data",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "al2023_eks_managed_node_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": false,
            "id": "1550009236",
            "part": [
              {
                "content": "---\napiVersion: node.eks.aws/v1alpha1\nkind: NodeConfig\nspec:\n  kubelet:\n    config:\n      shutdownGracePeriod: 30s\n      featureGates:\n        DisableKubeletCloudCredentialProviders: true\n    flags:\n      - --node-labels=terraform-managed=true,cluster-name=demo-project_dev\n",
                "content_type": "application/node.eks.aws",
                "filename": null,
                "merge_type": null
              },
              {
                "content": "#!/bin/bash\necho \"Instance Initialization Script\"\n",
                "content_type": "text/x-shellscript",
                "filename": null,
                "merge_type": null
              },
              {
                "content": "---\napiVersion: node.eks.aws/v1alpha1\nkind: NodeConfig\nspec:\n  cluster:\n    name: demo-project_dev\n    apiServerEndpoint: https://E3C4969F2BBE773A54BDCE93157C5FDA.gr7.us-east-1.eks.amazonaws.com\n    certificateAuthority: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRDVrS0hWR0k5WmN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBNE1UTXhPVFF3TXpKYUZ3MHpOVEE0TVRFeE9UUTFNekphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURyWUhVVkpCWDY1WFk4NWNhajgzUGNiL2dPYTQzc1ErQnBlUFhBT01wMElpam5EbDVMUit3dzBhTTEKeEQ4Tkx1Y2Z5RmxjZmF0bGhwK1Uzdng5ZUFiRGUxaC96QTlKVlhKRHRBRVFPNjhOSjFuOEZ5YkV6bW9WNkVRNAo5cEVVMzRtZENzejRMRmZXZVZpTzA2L2J6L1BuM3JCL1c1WU5TbFVtaXJUaXlrbmhJd1dGWE04bzV5VG9uOUwrCld6Q21KenlQeHRjNHptbkpkREYvSHBjZHAxTExZQ3pHYU00MXBZejA5OUVuWlppSjV1NG5aRnM2SG9kRWtLcnkKRWIwbE02Nk1PaWNrZ0dacXlZVFY1Nms3T0NtU05lRXNnTlVvZzNzTlgwUmc0Y3NIckc3M1RnekZrNndQc3JzNgo4WVVEaVlQRW5pMDdtQXZuYU0rVzhwYlZ1YS9qQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSZVpSeUk2QWdRQlR2VFIrNmhxVERaa21jdE9qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnhNYXh4Vk1qcQp2TWxhbmJNSFMxeC9aejJmaUczTTM0SGppekVzVWIvclRUclhpUXZmcmJuaXNxQ1RXL1hxRVVEWHcxOXFRZDdGCjdMdFB4czNnWnFEdDYrTUZGZ1FnczgxYUgxcm10a1JwcmFkVmVyOWJ2N1p2dXV5blFGMjNXOTA4bmlKVXUxSUcKK2h6SldUTnlpQnFnQ2gyT0JReVlTVytzZGtxb2QxemJoTlhrV1A2cVFkejFZQSsvckNJUFV4WmtNL3BmbVhaagpyQXZYbUZGU00rcTF0Y0FLVDFrTkpQMVQvNEE4ajF4cVJXc0hOSXdtQ3dROWN6eEJnQ2hOb2pOS3lPRXdtV1RZCm1tSU9DNXJ0SXdMRXl0bThmU21ONHZaMG1MTWZkb2ZwTURGT1Rja0hMUUxyd1p4TG43b0tkS0srSGs0elo2cXIKMnhuT09Ublg0VEp4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    cidr: 172.20.0.0/16\n",
                "content_type": "application/node.eks.aws",
                "filename": null,
                "merge_type": null
              },
              {
                "content": "#!/bin/bash\necho \"Post Instance Initialization Script\"\n",
                "content_type": "text/x-shellscript",
                "filename": null,
                "merge_type": null
              }
            ],
            "rendered": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSJNSU1FQk9VTkRBUlkiCk1JTUUtVmVyc2lvbjogMS4wDQoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL25vZGUuZWtzLmF3cw0KTWltZS1WZXJzaW9uOiAxLjANCg0KLS0tCmFwaVZlcnNpb246IG5vZGUuZWtzLmF3cy92MWFscGhhMQpraW5kOiBOb2RlQ29uZmlnCnNwZWM6CiAga3ViZWxldDoKICAgIGNvbmZpZzoKICAgICAgc2h1dGRvd25HcmFjZVBlcmlvZDogMzBzCiAgICAgIGZlYXR1cmVHYXRlczoKICAgICAgICBEaXNhYmxlS3ViZWxldENsb3VkQ3JlZGVudGlhbFByb3ZpZGVyczogdHJ1ZQogICAgZmxhZ3M6CiAgICAgIC0gLS1ub2RlLWxhYmVscz10ZXJyYWZvcm0tbWFuYWdlZD10cnVlLGNsdXN0ZXItbmFtZT1kZW1vLXByb2plY3RfZGV2Cg0KLS1NSU1FQk9VTkRBUlkNCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQNCkNvbnRlbnQtVHlwZTogdGV4dC94LXNoZWxsc2NyaXB0DQpNaW1lLVZlcnNpb246IDEuMA0KDQojIS9iaW4vYmFzaAplY2hvICJJbnN0YW5jZSBJbml0aWFsaXphdGlvbiBTY3JpcHQiCg0KLS1NSU1FQk9VTkRBUlkNCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vbm9kZS5la3MuYXdzDQpNaW1lLVZlcnNpb246IDEuMA0KDQotLS0KYXBpVmVyc2lvbjogbm9kZS5la3MuYXdzL3YxYWxwaGExCmtpbmQ6IE5vZGVDb25maWcKc3BlYzoKICBjbHVzdGVyOgogICAgbmFtZTogZGVtby1wcm9qZWN0X2RldgogICAgYXBpU2VydmVyRW5kcG9pbnQ6IGh0dHBzOi8vRTNDNDk2OUYyQkJFNzczQTU0QkRDRTkzMTU3QzVGREEuZ3I3LnVzLWVhc3QtMS5la3MuYW1hem9uYXdzLmNvbQogICAgY2VydGlmaWNhdGVBdXRob3JpdHk6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJDVkVORFFXVXlaMEYzU1VKQlowbEpSRFZyUzBoV1IwazVXbU4zUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRsUkJORTFVVFhoUFZGRjNUWHBLWVVaM01IcE9WRUUwVFZSRmVFOVVVVEZOZWtwaFRVSlZlQXBGZWtGU1FtZE9Wa0pCVFZSRGJYUXhXVzFXZVdKdFZqQmFXRTEzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYZG5aMFZMQ2tGdlNVSkJVVVJ5V1VoVlZrcENXRFkxV0ZrNE5XTmhhamd6VUdOaUwyZFBZVFF6YzFFclFuQmxVRmhCVDAxd01FbHBhbTVFYkRWTVVpdDNkekJoVFRFS2VFUTRUa3gxWTJaNVJteGpabUYwYkdod0sxVXpkbmc1WlVGaVJHVXhhQzk2UVRsS1ZsaEtSSFJCUlZGUE5qaE9TakZ1T0VaNVlrVjZiVzlXTmtWUk5BbzVjRVZWTXpSdFpFTnplalJNUm1aWFpWWnBUekEyTDJKNkwxQnVNM0pDTDFjMVdVNVRiRlZ0YVhKVWFYbHJibWhKZDFkR1dFMDRielY1Vkc5dU9Vd3JDbGQ2UTIxS2VubFFlSFJqTkhwdGJrcGtSRVl2U0hCalpIQXhURXhaUTNwSFlVMDBNWEJaZWpBNU9VVnVXbHBwU2pWMU5HNWFSbk0yU0c5a1JXdExjbmtLUldJd2JFMDJOazFQYVdOclowZGFjWGxaVkZZMU5tczNUME50VTA1bFJYTm5UbFZ2WnpOelRsZ3dVbWMwWTNOSWNrYzNNMVJuZWtack5uZFFjM0p6TmdvNFdWVkVhVmxRUlc1cE1EZHRRWFp1WVUwclZ6aHdZbFoxWVM5cVFXZE5Ra0ZCUjJwWFZFSllUVUUwUjBFeFZXUkVkMFZDTDNkUlJVRjNTVU53UkVGUUNrSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZUVUl3UjBFeFZXUkVaMUZYUWtKU1pWcFNlVWsyUVdkUlFsUjJWRklyTm1oeFZFUmFhMjFqZEU5cVFWWUtRbWRPVmtoU1JVVkVha0ZOWjJkd2NtUlhTbXhqYlRWc1pFZFdlazFCTUVkRFUzRkhVMGxpTTBSUlJVSkRkMVZCUVRSSlFrRlJRbmhOWVhoNFZrMXFjUXAyVFd4aGJtSk5TRk14ZUM5YWVqSm1hVWN6VFRNMFNHcHBla1Z6VldJdmNsUlVjbGhwVVhabWNtSnVhWE54UTFSWEwxaHhSVlZFV0hjeE9YRlJaRGRHQ2pkTWRGQjRjek5uV25GRWREWXJUVVpHWjFGbmN6Z3hZVWd4Y20xMGExSndjbUZrVm1WeU9XSjJOMXAyZFhWNWJsRkdNak5YT1RBNGJtbEtWWFV4U1VjS0syaDZTbGRVVG5scFFuRm5RMmd5VDBKUmVWbFRWeXR6Wkd0eGIyUXhlbUpvVGxoclYxQTJjVkZrZWpGWlFTc3Zja05KVUZWNFdtdE5MM0JtYlZoYWFncHlRWFpZYlVaR1UwMHJjVEYwWTBGTFZERnJUa3BRTVZRdk5FRTRhakY0Y1ZKWGMwaE9TWGR0UTNkUk9XTjZlRUpuUTJoT2IycE9TM2xQUlhkdFYxUlpDbTF0U1U5RE5YSjBTWGRNUlhsMGJUaG1VMjFPTkhaYU1HMU1UV1prYjJad1RVUkdUMVJqYTBoTVVVeHlkMXA0VEc0M2IwdGtTMHNyU0dzMGVsbzJjWElLTW5odVQwOVVibGcwVkVwNENpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogICAgY2lkcjogMTcyLjIwLjAuMC8xNgoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdA0KTWltZS1WZXJzaW9uOiAxLjANCg0KIyEvYmluL2Jhc2gKZWNobyAiUG9zdCBJbnN0YW5jZSBJbml0aWFsaXphdGlvbiBTY3JpcHQiCg0KLS1NSU1FQk9VTkRBUlktLQ0K"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"demo_project\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8181272951407661298",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "851725332550",
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "851725332550",
            "user_id": "AIDA4MTWJGBDKC7FRJUQV"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1836573694",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::851725332550:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::851725332550:user/cloud_user\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::851725332550:role/demo-project_dev-cluster-20250813193956491700000006\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::851725332550:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::851725332550:user/cloud_user\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::851725332550:role/demo-project_dev-cluster-20250813193956491700000006\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::851725332550:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::851725332550:user/cloud_user"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::851725332550:role/demo-project_dev-cluster-20250813193956491700000006"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-1:851725332550:alias/eks/demo-project_dev",
            "id": "alias/eks/demo-project_dev",
            "name": "alias/eks/demo-project_dev",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-east-1:851725332550:key/ac8ad9a7-d592-490d-b645-f502b087f2d1",
            "target_key_id": "ac8ad9a7-d592-490d-b645-f502b087f2d1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-1:851725332550:key/ac8ad9a7-d592-490d-b645-f502b087f2d1",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "demo-project_dev cluster encryption key",
            "enable_key_rotation": true,
            "id": "ac8ad9a7-d592-490d-b645-f502b087f2d1",
            "is_enabled": true,
            "key_id": "ac8ad9a7-d592-490d-b645-f502b087f2d1",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::851725332550:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::851725332550:user/cloud_user\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::851725332550:role/demo-project_dev-cluster-20250813193956491700000006\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "rotation_period_in_days": 365,
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true",
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.external_secret_iam_assumable_role_with_oidc",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "851725332550",
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "851725332550",
            "user_id": "AIDA4MTWJGBDKC7FRJUQV"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.external_secret_iam_assumable_role_with_oidc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3957843956",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::851725332550:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Principal\":{\"Federated\":\"arn:aws:iam::851725332550:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::851725332550:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.external_secret_iam_assumable_role_with_oidc",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.external_secret_iam_assumable_role_with_oidc",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/external-secrets-operator-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::851725332550:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/E3C4969F2BBE773A54BDCE93157C5FDA\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:50:54Z",
            "description": "",
            "force_detach_policies": false,
            "id": "external-secrets-operator-role",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "external-secrets-operator-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDBZXLPW3LK"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.external_secret_iam_assumable_role_with_oidc.data.aws_caller_identity.current",
            "module.external_secret_iam_assumable_role_with_oidc.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.external_secret_iam_assumable_role_with_oidc.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.external_secret_iam_assumable_role_with_oidc",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "external-secrets-operator-role-20250813195055967800000023",
            "policy_arn": "arn:aws:iam::aws:policy/SecretsManagerReadWrite",
            "role": "external-secrets-operator-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_caller_identity.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.eks_auto",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_policy_document.node_assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.external_secret_iam_assumable_role_with_oidc.aws_iam_role.this",
            "module.external_secret_iam_assumable_role_with_oidc.data.aws_caller_identity.current",
            "module.external_secret_iam_assumable_role_with_oidc.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.external_secret_iam_assumable_role_with_oidc.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "851725332550",
            "arn": "arn:aws:iam::851725332550:user/cloud_user",
            "id": "851725332550",
            "user_id": "AIDA4MTWJGBDKC7FRJUQV"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "flow_log_cloudwatch_assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1021377347",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AWSVPCFlowLogsAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"vpc-flow-logs.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AWSVPCFlowLogsAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"vpc-flow-logs.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "vpc-flow-logs.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "AWSVPCFlowLogsAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vpc_flow_log_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "727561289",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AWSVPCFlowLogsPushToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\",\n        \"logs:DescribeLogGroups\",\n        \"logs:CreateLogStream\"\n      ],\n      \"Resource\": \"arn:aws:logs:us-east-1:851725332550:log-group:/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06:*\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AWSVPCFlowLogsPushToCloudWatch\",\"Effect\":\"Allow\",\"Action\":[\"logs:PutLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:CreateLogStream\"],\"Resource\":\"arn:aws:logs:us-east-1:851725332550:log-group:/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06:*\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogStream",
                  "logs:DescribeLogGroups",
                  "logs:DescribeLogStreams",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:us-east-1:851725332550:log-group:/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06:*"
                ],
                "sid": "AWSVPCFlowLogsPushToCloudWatch"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "flow_log",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:851725332550:log-group:/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06",
            "id": "/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06",
            "name_prefix": "",
            "retention_in_days": 0,
            "skip_destroy": false,
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-054f624f9da93c9f3",
            "arn": "arn:aws:ec2:us-east-1:851725332550:elastic-ip/eipalloc-054f624f9da93c9f3",
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-054f624f9da93c9f3",
            "instance": "",
            "ipam_pool_id": null,
            "network_border_group": "us-east-1",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "ptr_record": "",
            "public_dns": "ec2-54-172-216-163.compute-1.amazonaws.com",
            "public_ip": "54.172.216.163",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "demo-project-us-east-1a"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-us-east-1a",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-052cf69891a7555a7",
            "arn": "arn:aws:ec2:us-east-1:851725332550:elastic-ip/eipalloc-052cf69891a7555a7",
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-052cf69891a7555a7",
            "instance": "",
            "ipam_pool_id": null,
            "network_border_group": "us-east-1",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "ptr_record": "",
            "public_dns": "ec2-98-86-249-70.compute-1.amazonaws.com",
            "public_ip": "98.86.249.70",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "demo-project-us-east-1b"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-us-east-1b",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0bf211394b1c15eb3",
            "arn": "arn:aws:ec2:us-east-1:851725332550:elastic-ip/eipalloc-0bf211394b1c15eb3",
            "associate_with_private_ip": null,
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0bf211394b1c15eb3",
            "instance": "",
            "ipam_pool_id": null,
            "network_border_group": "us-east-1",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "ptr_record": "",
            "public_dns": "ec2-44-219-74-49.compute-1.amazonaws.com",
            "public_ip": "44.219.74.49",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "demo-project-us-east-1c"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-us-east-1c",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_flow_log",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:vpc-flow-log/fl-0e66efeaf4a8e5aeb",
            "deliver_cross_account_role": "",
            "destination_options": [],
            "eni_id": null,
            "iam_role_arn": "arn:aws:iam::851725332550:role/demo-project-vpc-flow-log-role-20250813193956491500000005",
            "id": "fl-0e66efeaf4a8e5aeb",
            "log_destination": "arn:aws:logs:us-east-1:851725332550:log-group:/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06",
            "log_destination_type": "cloud-watch-logs",
            "log_format": "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}",
            "log_group_name": "/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06",
            "max_aggregation_interval": 60,
            "subnet_id": null,
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "traffic_type": "ALL",
            "transit_gateway_attachment_id": null,
            "transit_gateway_id": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_cloudwatch_log_group.flow_log",
            "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "vpc_flow_log_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:policy/vpc-flow-log-to-cloudwatch-2025081319401485520000001b",
            "attachment_count": 0,
            "description": "",
            "id": "arn:aws:iam::851725332550:policy/vpc-flow-log-to-cloudwatch-2025081319401485520000001b",
            "name": "vpc-flow-log-to-cloudwatch-2025081319401485520000001b",
            "name_prefix": "vpc-flow-log-to-cloudwatch-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:CreateLogStream\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:logs:us-east-1:851725332550:log-group:/aws/vpc-flow-log/vpc-0bcf4e5cc68b61c06:*\",\"Sid\":\"AWSVPCFlowLogsPushToCloudWatch\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4MTWJGBDPZ7ZIIWNT",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_cloudwatch_log_group.flow_log",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.data.aws_caller_identity.current",
            "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
            "module.vpc.data.aws_partition.current",
            "module.vpc.data.aws_region.current"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "vpc_flow_log_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::851725332550:role/demo-project-vpc-flow-log-role-20250813193956491500000005",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"vpc-flow-logs.amazonaws.com\"},\"Sid\":\"AWSVPCFlowLogsAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-08-13T19:39:57Z",
            "description": "",
            "force_detach_policies": false,
            "id": "demo-project-vpc-flow-log-role-20250813193956491500000005",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "demo-project-vpc-flow-log-role-20250813193956491500000005",
            "name_prefix": "demo-project-vpc-flow-log-role-",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "Environment": "dev",
              "Terraform": "true"
            },
            "unique_id": "AROA4MTWJGBDKIAWFDPU5"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "vpc_flow_log_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "demo-project-vpc-flow-log-role-20250813193956491500000005-2025081319401600220000001f",
            "policy_arn": "arn:aws:iam::851725332550:policy/vpc-flow-log-to-cloudwatch-2025081319401485520000001b",
            "role": "demo-project-vpc-flow-log-role-20250813193956491500000005"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_cloudwatch_log_group.flow_log",
            "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch",
            "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.data.aws_caller_identity.current",
            "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
            "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
            "module.vpc.data.aws_partition.current",
            "module.vpc.data.aws_region.current"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:internet-gateway/igw-0c361b2fb8cf68da9",
            "id": "igw-0c361b2fb8cf68da9",
            "owner_id": "851725332550",
            "tags": {
              "Name": "demo-project"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-054f624f9da93c9f3",
            "association_id": "eipassoc-0b0c362bf9318a2ee",
            "connectivity_type": "public",
            "id": "nat-0bb2fd6aaf12df432",
            "network_interface_id": "eni-05e53f7ade67d6f02",
            "private_ip": "10.0.4.159",
            "public_ip": "54.172.216.163",
            "secondary_allocation_ids": null,
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-079a1ab501d66fdc3",
            "tags": {
              "Name": "demo-project-us-east-1a"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-us-east-1a",
              "Terraform": "true"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-052cf69891a7555a7",
            "association_id": "eipassoc-02399f57e41062074",
            "connectivity_type": "public",
            "id": "nat-06b3563613260c034",
            "network_interface_id": "eni-006f8653863ddd421",
            "private_ip": "10.0.5.197",
            "public_ip": "98.86.249.70",
            "secondary_allocation_ids": null,
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-0e72a9b4f27508ed6",
            "tags": {
              "Name": "demo-project-us-east-1b"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-us-east-1b",
              "Terraform": "true"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0bf211394b1c15eb3",
            "association_id": "eipassoc-044785f5a26cbc2ba",
            "connectivity_type": "public",
            "id": "nat-0526c2587a50bac25",
            "network_interface_id": "eni-0c491d4f8a4699302",
            "private_ip": "10.0.6.172",
            "public_ip": "44.219.74.49",
            "secondary_allocation_ids": null,
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-069f83fcf56fd2ecc",
            "tags": {
              "Name": "demo-project-us-east-1c"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-us-east-1c",
              "Terraform": "true"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0dce0c678e0cbc3341080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0bb2fd6aaf12df432",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0dce0c678e0cbc334",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-01ba665f7fe5d83a01080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-06b3563613260c034",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-01ba665f7fe5d83a0",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0ee1f352fdb157da61080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0526c2587a50bac25",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0ee1f352fdb157da6",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0c361b2fb8cf68da9",
            "id": "r-rtb-06072a77f4cef9cad1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-06072a77f4cef9cad",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:route-table/rtb-0dce0c678e0cbc334",
            "id": "rtb-0dce0c678e0cbc334",
            "owner_id": "851725332550",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "demo-project-private-us-east-1a"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1a",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:route-table/rtb-01ba665f7fe5d83a0",
            "id": "rtb-01ba665f7fe5d83a0",
            "owner_id": "851725332550",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "demo-project-private-us-east-1b"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1b",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:route-table/rtb-0ee1f352fdb157da6",
            "id": "rtb-0ee1f352fdb157da6",
            "owner_id": "851725332550",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "demo-project-private-us-east-1c"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1c",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:route-table/rtb-06072a77f4cef9cad",
            "id": "rtb-06072a77f4cef9cad",
            "owner_id": "851725332550",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "demo-project-public"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-public",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-00a583ce1cc73232e",
            "route_table_id": "rtb-0dce0c678e0cbc334",
            "subnet_id": "subnet-00f18c05642421c4f",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-072e4a985017bc4fc",
            "route_table_id": "rtb-01ba665f7fe5d83a0",
            "subnet_id": "subnet-00b492dfc5dff319c",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f515c39fbd81d2e1",
            "route_table_id": "rtb-0ee1f352fdb157da6",
            "subnet_id": "subnet-094ec5727ff995ddf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0ba8126d5ef84d1ab",
            "route_table_id": "rtb-06072a77f4cef9cad",
            "subnet_id": "subnet-079a1ab501d66fdc3",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0fa8afaa697fc4e00",
            "route_table_id": "rtb-06072a77f4cef9cad",
            "subnet_id": "subnet-0e72a9b4f27508ed6",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0c0ee899460b28015",
            "route_table_id": "rtb-06072a77f4cef9cad",
            "subnet_id": "subnet-069f83fcf56fd2ecc",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:subnet/subnet-00f18c05642421c4f",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.0.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-00f18c05642421c4f",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "851725332550",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1a",
              "Terraform": "true",
              "karpenter.sh/discovery": "demo-project_dev",
              "kubernetes.io/cluster/demo-project_dev": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1a",
              "Terraform": "true",
              "karpenter.sh/discovery": "demo-project_dev",
              "kubernetes.io/cluster/demo-project_dev": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:subnet/subnet-00b492dfc5dff319c",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-00b492dfc5dff319c",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "851725332550",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1b",
              "Terraform": "true",
              "karpenter.sh/discovery": "demo-project_dev",
              "kubernetes.io/cluster/demo-project_dev": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1b",
              "Terraform": "true",
              "karpenter.sh/discovery": "demo-project_dev",
              "kubernetes.io/cluster/demo-project_dev": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:subnet/subnet-094ec5727ff995ddf",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1c",
            "availability_zone_id": "use1-az1",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-094ec5727ff995ddf",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "851725332550",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1c",
              "Terraform": "true",
              "karpenter.sh/discovery": "demo-project_dev",
              "kubernetes.io/cluster/demo-project_dev": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-private-us-east-1c",
              "Terraform": "true",
              "karpenter.sh/discovery": "demo-project_dev",
              "kubernetes.io/cluster/demo-project_dev": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:subnet/subnet-079a1ab501d66fdc3",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-079a1ab501d66fdc3",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "851725332550",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "demo-project-public-us-east-1a",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-public-us-east-1a",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:subnet/subnet-0e72a9b4f27508ed6",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e72a9b4f27508ed6",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "851725332550",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "demo-project-public-us-east-1b",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-public-us-east-1b",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:subnet/subnet-069f83fcf56fd2ecc",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1c",
            "availability_zone_id": "use1-az1",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-069f83fcf56fd2ecc",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "851725332550",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "demo-project-public-us-east-1c",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project-public-us-east-1c",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0bcf4e5cc68b61c06"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:851725332550:vpc/vpc-0bcf4e5cc68b61c06",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0d5614185c95111fc",
            "default_route_table_id": "rtb-0d44a428d794761d9",
            "default_security_group_id": "sg-0dff3879140188d26",
            "dhcp_options_id": "dopt-0e3ed2c04f6bdb116",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0bcf4e5cc68b61c06",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0d44a428d794761d9",
            "owner_id": "851725332550",
            "tags": {
              "Name": "demo-project"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "demo-project",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.eks.module.self_managed_node_group.var.platform",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"demo_project\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    }
  ]
}
